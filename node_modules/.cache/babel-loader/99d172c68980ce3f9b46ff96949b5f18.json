{"ast":null,"code":"var _jsxFileName = \"/Users/sidorelakollcaku/Desktop/Project/src/Pages/DashboardScreens/WithOrganizations/UpdateGoals.jsx/Index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport MiniDrawer from '../../Sidebar';\nimport PersonIcon from '@material-ui/icons/Person';\nimport CreateGoals from '../CreateGoals/CreateGoals';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport firebase from '../../../../Config/FirebaseConfig';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst goalsInput = {\n  eventName: '',\n  description: '',\n  dificulty: '',\n  endDate: '',\n  investMin: '',\n  investMax: '',\n  rewardMin: '',\n  rewardMax: '',\n  startDate: '',\n  numberOfDays: ''\n};\n\nconst UpdateGoals = () => {\n  _s();\n\n  const history = useHistory();\n  let {\n    id,\n    goal\n  } = useParams();\n  const [inputValues, setInputValues] = useState(goalsInput);\n  const [imgUrl, setImgurl] = useState('');\n  const [imgName, setImgName] = useState('');\n  const [local, setLocal] = useState('');\n  let [filterGoal, setFilterGoal] = useState([]);\n  let [editGoalId, setEditGoalId] = useState('');\n  let [loading, setLoading] = useState(false);\n  const db = firebase.database();\n  const goals = useSelector(state => {\n    return state.goalReducer.OrgGoals;\n  });\n  const ref = db.ref(`organizations/${id}/categories`);\n  let [dbCategory, setDbCategory] = useState([]);\n\n  const getCategories = () => {\n    ref.on('value', snapshot => {\n      let categoryArray = [];\n      snapshot.forEach(data => {\n        let resData = data.val();\n        let dataKey = data.key;\n        resData.id = dataKey;\n        categoryArray.push(resData);\n      });\n      setDbCategory(categoryArray);\n    });\n  }; // useEffect(()=>{\n  // },[])\n  // console.log(goals)\n\n\n  useEffect(() => {\n    //   filter selected goal detail\n    let goalsFilter = goals.filter(val => val.id === goal);\n    setFilterGoal(goalsFilter);\n\n    if (goalsFilter.length) {\n      setImgurl(goalsFilter[0].url);\n      setInputValues(goalsFilter[0].inputValues);\n      setEditGoalId(goalsFilter[0].id);\n    }\n\n    getCategories();\n    return () => {\n      getCategories();\n    };\n  }, []);\n\n  const handleGoals = event => {\n    setInputValues({ ...inputValues,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleGoalImg = event => {\n    const url = URL.createObjectURL(event.target.files[0]);\n    const goalImgName = event.target.files[0].name;\n    setImgurl(url);\n    setImgName(goalImgName);\n    setLocal(event.target.files[0]);\n  }; // firebase storage ref\n\n\n  const storage = firebase.storage();\n\n  let createStorageRef = () => storage.ref(`goalsImages/${imgName}`).put(local);\n\n  let downLoad = () => storage.ref(`goalsImages/${imgName}`).getDownloadURL(); // firebase database reference\n\n\n  const goalsRef = db.ref(`organizations/${id}/goals/` + editGoalId);\n\n  const handleEmptyImg = () => {\n    setImgurl('');\n  }; // update goals in database\n\n\n  const handleUpdateGoals = e => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (local) {\n      createStorageRef().then(() => {\n        downLoad().then(url => {\n          goalsRef.update({\n            inputValues,\n            url,\n            // numberOfDays,\n            peopleJoined: 0\n          }).then(() => {\n            setLoading(false);\n            history.push(`/organizations/${id}/dashboard`);\n          }).catch(err => {\n            console.log(err);\n            setLoading(false);\n          });\n        });\n      });\n    } else {\n      goalsRef.update({\n        inputValues // numberOfDays,\n\n      }).then(() => {\n        setLoading(false);\n        history.push(`/organizations/${id}/dashboard`);\n      }).catch(err => {\n        console.log(err);\n        setLoading(false);\n      });\n    } // console.log(inputValues);\n\n\n    setInputValues(goalsInput);\n    setImgurl('');\n  };\n\n  if (!filterGoal.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createGoals_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"createGoals_md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard_left_content\",\n          children: /*#__PURE__*/_jsxDEV(MiniDrawer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create_goals_right_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"top_route_head\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"top_route_icon\",\n              children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginLeft: '10px'\n              },\n              children: \"Goals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create_goals_box_main\",\n            children: /*#__PURE__*/_jsxDEV(CreateGoals, {\n              handleAddGoals: handleUpdateGoals,\n              handleInputGoals: handleGoals,\n              handleGoalImg: handleGoalImg,\n              inputValues: inputValues,\n              imgUrl: imgUrl,\n              loading: loading,\n              btnValue: \"Confirm\",\n              handleEmptyImg: handleEmptyImg,\n              cross: true,\n              backArrowPathId: `/organizations/${id}/dashboard`,\n              dbCategory: dbCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateGoals, \"bPNE7CgAkdeRL3bv3rwXZ0s/1B0=\", false, function () {\n  return [useHistory, useParams, useSelector];\n});\n\n_c = UpdateGoals;\nexport default UpdateGoals;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateGoals\");","map":{"version":3,"sources":["/Users/sidorelakollcaku/Desktop/Project/src/Pages/DashboardScreens/WithOrganizations/UpdateGoals.jsx/Index.jsx"],"names":["React","useEffect","useState","MiniDrawer","PersonIcon","CreateGoals","useSelector","useParams","firebase","useHistory","goalsInput","eventName","description","dificulty","endDate","investMin","investMax","rewardMin","rewardMax","startDate","numberOfDays","UpdateGoals","history","id","goal","inputValues","setInputValues","imgUrl","setImgurl","imgName","setImgName","local","setLocal","filterGoal","setFilterGoal","editGoalId","setEditGoalId","loading","setLoading","db","database","goals","state","goalReducer","OrgGoals","ref","dbCategory","setDbCategory","getCategories","on","snapshot","categoryArray","forEach","data","resData","val","dataKey","key","push","goalsFilter","filter","length","url","handleGoals","event","target","name","value","handleGoalImg","URL","createObjectURL","files","goalImgName","storage","createStorageRef","put","downLoad","getDownloadURL","goalsRef","handleEmptyImg","handleUpdateGoals","e","preventDefault","then","update","peopleJoined","catch","err","console","log","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport MiniDrawer from '../../Sidebar'\nimport PersonIcon from '@material-ui/icons/Person'\nimport CreateGoals from '../CreateGoals/CreateGoals'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport firebase from '../../../../Config/FirebaseConfig'\nimport { useHistory } from 'react-router-dom'\n\nconst goalsInput = {\n  eventName: '',\n  description: '',\n  dificulty: '',\n  endDate: '',\n  investMin: '',\n  investMax: '',\n  rewardMin: '',\n  rewardMax: '',\n  startDate: '',\n  numberOfDays: '',\n}\n\nconst UpdateGoals = () => {\n  const history = useHistory()\n  let { id, goal } = useParams()\n  const [inputValues, setInputValues] = useState(goalsInput)\n  const [imgUrl, setImgurl] = useState('')\n  const [imgName, setImgName] = useState('')\n  const [local, setLocal] = useState('')\n  let [filterGoal, setFilterGoal] = useState([])\n  let [editGoalId, setEditGoalId] = useState('')\n  let [loading, setLoading] = useState(false)\n  const db = firebase.database()\n\n  const goals = useSelector((state) => {\n    return state.goalReducer.OrgGoals\n  })\n\n  const ref = db.ref(`organizations/${id}/categories`)\n  let [dbCategory, setDbCategory] = useState([])\n\n  const getCategories = () => {\n    ref.on('value', (snapshot) => {\n      let categoryArray = []\n      snapshot.forEach((data) => {\n        let resData = data.val()\n        let dataKey = data.key\n        resData.id = dataKey\n        categoryArray.push(resData)\n      })\n      setDbCategory(categoryArray)\n    })\n  }\n\n  // useEffect(()=>{\n  // },[])\n\n  // console.log(goals)\n  useEffect(() => {\n    //   filter selected goal detail\n    let goalsFilter = goals.filter((val) => val.id === goal)\n    setFilterGoal(goalsFilter)\n    if (goalsFilter.length) {\n      setImgurl(goalsFilter[0].url)\n      setInputValues(goalsFilter[0].inputValues)\n      setEditGoalId(goalsFilter[0].id)\n    }\n    getCategories()\n    return () => {\n      getCategories()\n    }\n  }, [])\n\n  const handleGoals = (event) => {\n    setInputValues({ ...inputValues, [event.target.name]: event.target.value })\n  }\n\n  const handleGoalImg = (event) => {\n    const url = URL.createObjectURL(event.target.files[0])\n    const goalImgName = event.target.files[0].name\n    setImgurl(url)\n    setImgName(goalImgName)\n    setLocal(event.target.files[0])\n  }\n  // firebase storage ref\n  const storage = firebase.storage()\n  let createStorageRef = () => storage.ref(`goalsImages/${imgName}`).put(local)\n  let downLoad = () => storage.ref(`goalsImages/${imgName}`).getDownloadURL()\n\n  // firebase database reference\n  const goalsRef = db.ref(`organizations/${id}/goals/` + editGoalId)\n\n  const handleEmptyImg = () => {\n    setImgurl('')\n  }\n\n  // update goals in database\n  const handleUpdateGoals = (e) => {\n    e.preventDefault()\n    setLoading(true)\n    if (local) {\n      createStorageRef().then(() => {\n        downLoad().then((url) => {\n          goalsRef\n            .update({\n              inputValues,\n              url,\n              // numberOfDays,\n              peopleJoined: 0,\n            })\n            .then(() => {\n              setLoading(false)\n              history.push(`/organizations/${id}/dashboard`)\n            })\n            .catch((err) => {\n              console.log(err)\n              setLoading(false)\n            })\n        })\n      })\n    } else {\n      goalsRef\n        .update({\n          inputValues,\n          // numberOfDays,\n        })\n        .then(() => {\n          setLoading(false)\n          history.push(`/organizations/${id}/dashboard`)\n        })\n        .catch((err) => {\n          console.log(err)\n          setLoading(false)\n        })\n    }\n    // console.log(inputValues);\n    setInputValues(goalsInput)\n    setImgurl('')\n  }\n\n  if (!filterGoal.length) {\n    return (\n      <div>\n        <p>Loading</p>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"createGoals_container\">\n        <div className=\"createGoals_md\">\n          <div className=\"dashboard_left_content\">\n            <MiniDrawer />\n          </div>\n          <div className=\"create_goals_right_content\">\n            <div className=\"top_route_head\">\n              <p className=\"top_route_icon\">\n                <PersonIcon />\n              </p>\n              <p style={{ marginLeft: '10px' }}>Goals</p>\n            </div>\n            <div className=\"create_goals_box_main\">\n              <CreateGoals\n                handleAddGoals={handleUpdateGoals}\n                handleInputGoals={handleGoals}\n                handleGoalImg={handleGoalImg}\n                inputValues={inputValues}\n                imgUrl={imgUrl}\n                loading={loading}\n                btnValue=\"Confirm\"\n                handleEmptyImg={handleEmptyImg}\n                cross\n                backArrowPathId={`/organizations/${id}/dashboard`}\n                dbCategory={dbCategory}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UpdateGoals\n"]},"metadata":{},"sourceType":"module"}