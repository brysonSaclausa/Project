{"ast":null,"code":"var _jsxFileName = \"/Users/sidorelakollcaku/Desktop/PROJECT1/src/Pages/DashboardScreens/OrganizationLinks/MainOrganization.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MiniDrawer from \"../Sidebar\"; // import AddOrganization from \"./AddOrgPopUp\";\n\nimport { useSelector } from \"react-redux\";\nimport firebase from \"../../../Config/FirebaseConfig\";\nimport InputPopup from \"../../../Components/InputPopup\";\nimport { Button } from \"@material-ui/core\"; // import \"./Org.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainOrganization = () => {\n  _s();\n\n  const database = firebase.database();\n  const ref = database.ref(\"organizations\");\n  const pushRef = ref.push(); // close dialog box\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // set org input value\n\n\n  let [organization, setOrganization] = useState(\"\");\n\n  const handleOrganization = event => {\n    setOrganization(event.target.value);\n  }; // add organization in firebase database\n\n\n  const addOrganization = () => {\n    if (organization.length > 3) {\n      pushRef.set({\n        orgName: organization\n      }).then(() => {\n        handleClose();\n        setOrganization('');\n      }).catch(err => {\n        console.log(err);\n        setOrganization('');\n        handleClose();\n      });\n    } else {\n      alert(\"please enter value or enter max 3 characters\");\n    }\n  };\n\n  const organizations = useSelector(state => {\n    return state.goalReducer.organizations;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainOrg_contianer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainOrg_md\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainOrg_sd\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard_left_content\",\n          children: /*#__PURE__*/_jsxDEV(MiniDrawer, {\n            linksShow: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"org_main_right\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"org_body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"org_links\",\n              children: [organizations.map(val => /*#__PURE__*/_jsxDEV(Link, {\n                className: \"org_btn_links\",\n                to: `/organizations/${val.id}/dashboard`,\n                children: val.orgName\n              }, val.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"withoutOrg\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"org_btn_links\",\n                  to: `/without-organization/dashboard` // key={val.id}\n                  ,\n                  children: \"Without Organization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new_org\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleClickOpen,\n                className: \"orngClr \",\n                children: \"Add Organization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputPopup, {\n                handleAddFunction: addOrganization,\n                handleInputvalue: handleOrganization,\n                inputValue: organization // handleClickOpen={handleClickOpen}\n                ,\n                open: open,\n                handleClose: handleClose,\n                labelValue: \"Organization name\",\n                btnValue: \"Add Organization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainOrganization, \"IncjOCFufxT0q5rNLfoZWo6RdKo=\", false, function () {\n  return [useSelector];\n});\n\n_c = MainOrganization;\nexport default MainOrganization;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainOrganization\");","map":{"version":3,"sources":["/Users/sidorelakollcaku/Desktop/PROJECT1/src/Pages/DashboardScreens/OrganizationLinks/MainOrganization.jsx"],"names":["React","useState","Link","MiniDrawer","useSelector","firebase","InputPopup","Button","MainOrganization","database","ref","pushRef","push","open","setOpen","handleClickOpen","handleClose","organization","setOrganization","handleOrganization","event","target","value","addOrganization","length","set","orgName","then","catch","err","console","log","alert","organizations","state","goalReducer","map","val","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MiniDrawer from \"../Sidebar\";\n// import AddOrganization from \"./AddOrgPopUp\";\nimport { useSelector } from \"react-redux\";\nimport firebase from \"../../../Config/FirebaseConfig\";\nimport InputPopup from \"../../../Components/InputPopup\";\nimport { Button } from \"@material-ui/core\";\n\n// import \"./Org.css\";\n\nconst MainOrganization = () => {\n  const database = firebase.database();\n  const ref = database.ref(\"organizations\");\n  const pushRef = ref.push();\n  // close dialog box\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  // set org input value\n  let [organization, setOrganization] = useState(\"\");\n\n  const handleOrganization = (event) => {\n    setOrganization(event.target.value);\n  };\n  // add organization in firebase database\n  const addOrganization = () => {\n    if (organization.length > 3) {\n      pushRef\n        .set({ orgName: organization })\n        .then(() => {\n          handleClose();\n          setOrganization('')\n        })\n        .catch((err) => {\n          console.log(err);\n          setOrganization('')\n          handleClose();\n        });\n    } else {\n      alert(\"please enter value or enter max 3 characters\");\n    }\n  };\n\n  const organizations = useSelector((state) => {\n    return state.goalReducer.organizations;\n  });\n\n  return (\n    <div className=\"mainOrg_contianer\">\n      <div className=\"mainOrg_md\">\n        <div className=\"mainOrg_sd\">\n          <div className=\"dashboard_left_content\">\n            <MiniDrawer linksShow />\n          </div>\n          <div className=\"org_main_right\">\n            <div className=\"org_body\">\n              <div className=\"org_links\">\n                {organizations.map((val) => (\n                  <Link\n                    className=\"org_btn_links\"\n                    to={`/organizations/${val.id}/dashboard`}\n                    key={val.id}\n                  >\n                    {val.orgName}\n                  </Link>\n                ))}\n                <div className=\"withoutOrg\">\n                <Link\n                    className=\"org_btn_links\"\n                    to={`/without-organization/dashboard`}\n                    // key={val.id}\n                  >\n                    {/* {val.orgName} */}\n                    Without Organization\n                  </Link>\n                </div>\n              </div>\n              <div className=\"new_org\">\n                <Button onClick={handleClickOpen} className='orngClr '>\n                Add Organization\n                </Button>\n                <InputPopup\n                  handleAddFunction={addOrganization}\n                  handleInputvalue={handleOrganization}\n                  inputValue={organization}\n                  // handleClickOpen={handleClickOpen}\n                  open={open}\n                  handleClose={handleClose}\n                  labelValue='Organization name'\n                  btnValue='Add Organization'\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainOrganization;\n"]},"metadata":{},"sourceType":"module"}