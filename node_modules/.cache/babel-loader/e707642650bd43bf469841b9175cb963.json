{"ast":null,"code":"var _jsxFileName = \"/Users/sidorelakollcaku/Desktop/PROJECT1/src/Pages/UserSide/MyGoal/LineChart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Slider from 'react-slick';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = {\n  labels: ['1D', '1W', '1M', '3M', '1Y'],\n  datasets: [{\n    label: '# of Votes',\n    data: [4, 19, 3, 5, 2],\n    fill: false,\n    backgroundColor: 'orange',\n    borderColor: 'orange'\n  }]\n};\nconst options = {\n  plugins: {\n    legend: {\n      display: false\n    }\n  },\n  scales: {\n    x: {\n      grid: {\n        display: false\n      }\n    },\n    y: {\n      grid: {\n        display: false,\n        drawBorder: false,\n        lineWidth: 0.5\n      },\n      ticks: {\n        display: false\n      }\n    }\n  }\n};\n\nfunction SampleNextArrow(props) {\n  const {\n    className,\n    style,\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className // style={{ ...style, display: \"block\", background: \"red\" }}\n    ,\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {\n      className: \"slideArrow nextIc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SampleNextArrow;\n\nfunction SamplePrevArrow(props) {\n  const {\n    className,\n    style,\n    onClick\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {\n      className: \"slideArrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = SamplePrevArrow;\n\nconst LineChart = () => {\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    nextArrow: /*#__PURE__*/_jsxDEV(SampleNextArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this),\n    prevArrow: /*#__PURE__*/_jsxDEV(SamplePrevArrow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this) // arrows:false\n\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        className: \"lineChartMain\",\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        className: \"lineChartMain\",\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        className: \"lineChartMain\",\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = LineChart;\nexport default LineChart;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SampleNextArrow\");\n$RefreshReg$(_c2, \"SamplePrevArrow\");\n$RefreshReg$(_c3, \"LineChart\");","map":{"version":3,"sources":["/Users/sidorelakollcaku/Desktop/PROJECT1/src/Pages/UserSide/MyGoal/LineChart.jsx"],"names":["React","Line","Slider","ArrowBackIosIcon","data","labels","datasets","label","fill","backgroundColor","borderColor","options","plugins","legend","display","scales","x","grid","y","drawBorder","lineWidth","ticks","SampleNextArrow","props","className","style","onClick","SamplePrevArrow","LineChart","settings","dots","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Line } from 'react-chartjs-2'\nimport Slider from 'react-slick'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\n\nconst data = {\n  labels: ['1D', '1W', '1M', '3M', '1Y'],\n  datasets: [\n    {\n      label: '# of Votes',\n      data: [4, 19, 3, 5, 2],\n      fill: false,\n      backgroundColor: 'orange',\n      borderColor: 'orange',\n    },\n  ],\n}\n\nconst options = {\n  plugins: {\n    legend: {\n      display: false,\n    },\n  },\n  scales: {\n    x: {\n      grid: {\n        display: false,\n      },\n    },\n    y: {\n      grid: {\n        display: false,\n        drawBorder: false,\n        lineWidth: 0.5,\n      },\n      ticks: {\n        display: false\n    }\n    },\n  },\n}\n\nfunction SampleNextArrow(props) {\n  const { className, style, onClick } = props\n  return (\n    <div\n      className={className}\n      // style={{ ...style, display: \"block\", background: \"red\" }}\n      onClick={onClick}\n    >\n      <ArrowBackIosIcon className='slideArrow nextIc'/>\n    </div>\n  )\n}\n\nfunction SamplePrevArrow(props) {\n  const { className, style, onClick } = props\n  return (\n    <div className={className} onClick={onClick}>\n      <ArrowBackIosIcon className='slideArrow' />\n    </div>\n  )\n}\n\nconst LineChart = () => {\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    nextArrow: <SampleNextArrow />,\n    prevArrow: <SamplePrevArrow />,\n    // arrows:false\n  }\n  return (\n    <>\n      <Slider {...settings}>\n          <Line className='lineChartMain' data={data} options={options} />\n          <Line className='lineChartMain' data={data} options={options} />\n          <Line className='lineChartMain' data={data} options={options} />\n      </Slider>\n    </>\n  )\n}\n\nexport default LineChart\n"]},"metadata":{},"sourceType":"module"}