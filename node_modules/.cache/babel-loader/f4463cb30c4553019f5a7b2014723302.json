{"ast":null,"code":"var _jsxFileName = \"/Users/sidorelakollcaku/Desktop/PROJECT1/src/Pages/DashboardScreens/WithOutOrganizations/SubmitGoals/SubmitGoalsTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport firebase from \"../../../../Config/FirebaseConfig\";\nimport ApprovedForm from \"../../WithOrganizations/SubmitGoals/ApprovedForm\";\nimport { send } from \"emailjs-com\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SubmitGoalsTable = ({\n  selector,\n  btn,\n  undoFunc,\n  declineBtn,\n  approvedUndoFunc,\n  declineForReported,\n  undoForReported,\n  undoFake\n}) => {\n  _s();\n\n  const db = firebase.database(); // approved form working\n\n  let [open, setOpen] = useState(false);\n  let [goalId, setGoalId] = useState(\"\");\n  let [percantage, setPercentage] = useState(\"\");\n  let [reward, setReward] = useState(\"\");\n  let [rewardRange, setRewardRange] = useState(\"\");\n  let [organizationUserId, setOrganizationUserId] = useState(\"\");\n  let [loading] = useState(false);\n  let [userBalance, setUserBalance] = useState(\"\");\n  let [userMyGoalId, setUserMyGoalId] = useState(\"\");\n  let [userInvest, setUserInvest] = useState(); // working for approved form\n\n  const openApprovedForm = event => {\n    setOpen(true);\n    setGoalId(event.submitGoalId);\n    setUserMyGoalId(event.SubmitGoal.myGoalId);\n    setOrganizationUserId(event.orgUserId);\n    setRewardRange(`${event.SubmitGoal.inputValues.rewardMin} - ${event.SubmitGoal.inputValues.rewardMin}`);\n    setUserInvest(event.SubmitGoal.userInvestment); // get organization user info to get prev balance\n\n    db.ref(`withoutOrganization/users/${event.orgUserId}`).on(\"value\", snapshot => {\n      let userData = snapshot.val();\n      let userBalancedb = userData.balance;\n      setUserBalance(userBalancedb);\n    });\n  };\n\n  const handlePercentage = event => {\n    setPercentage(event.target.value);\n  };\n\n  const handleReward = event => {\n    setReward(event.target.value);\n  }; // form close function\n\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // goals delete function\n\n\n  const handleApprovedGoals = () => {\n    let approveData = {\n      approved: true,\n      pending: false,\n      percantage: percantage,\n      reward: reward,\n      submit: true,\n      isReport: false\n    };\n    let pendingData = {\n      approved: true,\n      percantage: percantage,\n      pending: true,\n      reward: reward,\n      submit: true,\n      isReport: false\n    };\n\n    if (percantage === \"100\") {\n      // console.log(\"100%\");\n      db.ref(`withoutOrganization/users/${organizationUserId}`).update({\n        balance: Number(userBalance) + Number(reward) + userInvest\n      });\n      db.ref(`withoutOrganization/users/${organizationUserId}/myGoals/${userMyGoalId}`).update(approveData);\n      db.ref(`withoutOrganization/submitGoals/${goalId}`).update(approveData);\n      setPercentage(\"\");\n      setReward(\"\");\n      handleClose();\n    } else {\n      db.ref(`withoutOrganization/submitGoals/${goalId}`).update(pendingData);\n      db.ref(`withoutOrganization/users/${organizationUserId}/myGoals/${userMyGoalId}`).update(pendingData);\n      handleClose();\n      setPercentage(\"\");\n      setReward(\"\");\n    }\n  };\n\n  const handleDeclineGoals = event => {\n    db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update({\n      decline: true\n    });\n    db.ref(`withoutOrganization/users/myGoals/${event.SubmitGoal.myGoalId}`).update({\n      decline: true\n    });\n  };\n\n  const handleUndoDeclineGoals = event => {\n    db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update({\n      decline: false\n    });\n    db.ref(`withoutOrganization/users/myGoals/${event.SubmitGoal.myGoalId}`).update({\n      decline: false\n    });\n  };\n\n  const balanceSelector = useSelector(state => {\n    return state.goalReducer.orgUsers;\n  });\n  const allUsersSelector = useSelector(state => {\n    return state;\n  }); // approved undo function\n\n  const handleApprovedUndo = event => {\n    const getPrevReward = event.reward;\n    const updateData = {\n      approved: false,\n      pending: false,\n      percantage: \"\",\n      reward: \"\"\n    };\n    balanceSelector.filter(val => {\n      if (val.id === event.orgUserId) {\n        let userBlnce = val.balance;\n        db.ref(`withoutOrganization/users/${event.orgUserId}`).update({\n          balance: userBlnce - (Number(getPrevReward) + event.SubmitGoal.userInvestment)\n        });\n        db.ref(`withoutOrganization/users/${event.orgUserId}/myGoals/${event.SubmitGoal.myGoalId}`).update(updateData);\n        db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update(updateData);\n      }\n    });\n  }; // undo reported goal\n\n\n  const handleUndoReportedGoals = event => {\n    db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update({\n      isReport: false\n    });\n  }; // decline if goal is reported\n\n\n  const handleDeclineReportGoals = event => {\n    const getPrevReward = event.reward;\n    const updateData = {\n      approved: false,\n      percantage: \"\",\n      pending: false,\n      reward: \"\",\n      isReport: true,\n      acceptReport: true,\n      submit: false\n    };\n    balanceSelector.filter(val => {\n      if (val.id === event.orgUserId) {\n        let userBlnce = val.balance;\n        db.ref(`withoutOrganization/users/${event.orgUserId}`).update({\n          balance: userBlnce - (Number(getPrevReward) ? Number(getPrevReward) : 0)\n        });\n        db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update(updateData).then(() => {\n          allUsersSelector.userReducer.allUsers.filter(user => {\n            if (user.id === event.userIdMain) {\n              // console.log(user)\n              send( // process.env.REACT_APP_EMAIL_JS_SERVICE_ID,\n              // process.env.REACT_APP_EMAIL_JS_TEMPLATE_ID,\n              \"service_q1galup\", \"template_aq5fbiv\", {\n                to: user.email,\n                to_name: `${event.userName}`,\n                from_email_name: \"TRYVE\",\n                subject: \"\",\n                message: `TRYVE reported your goal please retake good picture. Thanks!`,\n                from: \"tryve@gmail.com\",\n                reply_to: \"tryve@gmail.com\"\n              }, process.env.REACT_APP_EMAIL_JS_USER_ID).then(() => {\n                console.log(\"success...\");\n              }).catch(err => {\n                console.log(\"admin Email sending FAILED...\", err);\n              });\n            }\n          });\n        });\n        db.ref(`withoutOrganization/users/${event.orgUserId}/myGoals/${event.SubmitGoal.myGoalId}`).update(updateData);\n        db.ref(`withoutOrganization/likes/${event.submitGoalId}`).remove();\n        db.ref(`withoutOrganization/comments/${event.submitGoalId}`).remove();\n      }\n    });\n  }; // undo fake goals\n\n\n  const handleUndoFakeGoals = event => {\n    db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update({\n      acceptReport: false\n    });\n    db.ref(`withoutOrganization/users/${event.orgUserId}/myGoals/${event.SubmitGoal.myGoalId}`).update({\n      acceptReport: false\n    });\n  }; // automatically approved working\n\n\n  useEffect(() => {\n    let approvedinterVal = setInterval(() => {\n      if (selector.length) {\n        selector.filter(val => {\n          if (!val.isReport && !val.decline && !val.acceptReport && !val.pending && val.submit && !val.approved) {\n            const inputVal = val.SubmitGoal.inputValues;\n            let getStartDate = new Date(val.SubmitGoal.GoalStartDate);\n            let endDate = new Date(getStartDate);\n            let currentDate = new Date();\n            endDate.setDate(endDate.getDate() + Number(inputVal.numberOfDays));\n            let randomNumGenerate = Math.floor(Math.random() * (Number(inputVal.rewardMax) - Number(inputVal.rewardMin) + Number(inputVal.rewardMin)));\n\n            if (currentDate.getTime() >= endDate.getTime()) {\n              const filterGoalUser = balanceSelector.filter(user => user.id === val.orgUserId);\n              const approvedObj = {\n                approved: true,\n                pending: false,\n                percantage: \"100\",\n                reward: randomNumGenerate,\n                submit: true,\n                isReport: false\n              };\n              db.ref(`withoutOrganization/users/${val.orgUserId}`).update({\n                balance: filterGoalUser[0].balance + randomNumGenerate + val.SubmitGoal.userInvestment\n              });\n              db.ref(`withoutOrganization/users/${val.orgUserId}/myGoals/${val.SubmitGoal.myGoalId}`).update(approvedObj);\n              db.ref(`withoutOrganization/submitGoals/${val.submitGoalId}`).update(approvedObj).then(() => {\n                console.log(\"auto approved\");\n              });\n              console.log(\"end\", val);\n            }\n          } // if goals is reported and not approved not pending only submit and someone reported then is would be decline autt\n          else if (val.isReport && !val.decline && !val.acceptReport && !val.pending && val.submit && !val.approved) {\n            const inputVal = val.SubmitGoal.inputValues;\n            let getStartDate = new Date(val.SubmitGoal.GoalStartDate);\n            let endDate = new Date(getStartDate);\n            let currentDate = new Date();\n            endDate.setDate(endDate.getDate() + Number(inputVal.numberOfDays));\n\n            if (currentDate.getTime() >= endDate.getTime()) {\n              db.ref(`withoutOrganization/submitGoals/${val.submitGoalId}`).update({\n                decline: true,\n                submit: false,\n                isReport: false\n              });\n              db.ref(`withoutOrganization/users/${val.orgUserId}/myGoals/${val.SubmitGoal.myGoalId}`).update({\n                decline: true,\n                submit: false,\n                isReport: false\n              });\n            }\n          }\n        });\n      }\n    }, 10000);\n    return () => {\n      clearInterval(approvedinterVal);\n    };\n  }); // submit goal image function\n\n  let [imgUrl, setImgUrl] = useState(\"\");\n  let [showImg, setShowImg] = useState(false);\n\n  const handleSeeImage = event => {\n    setImgUrl(event);\n    setShowImg(true);\n  };\n\n  const handleCloseImg = () => {\n    setShowImg(false);\n    setImgUrl(\"\");\n  }; // console.log(selector);\n\n\n  if (!selector.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"no goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table_container\",\n    children: [/*#__PURE__*/_jsxDEV(ApprovedForm, {\n      open: open,\n      handleClickOpen: openApprovedForm,\n      handleSelect: handlePercentage,\n      handleInputvalue: handleReward,\n      inputValue: reward,\n      btnValue: \"Approved\",\n      labelValue: \"Reward\",\n      range: rewardRange,\n      handleAddFunction: handleApprovedGoals,\n      handleClose: handleClose,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApprovedForm, {\n      handleClickOpen: handleSeeImage,\n      imgUrl: imgUrl,\n      open: showImg,\n      btnValue: \"Close\",\n      handleClose: handleCloseImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table_md\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"goals_table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Event Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"user name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time Limit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Reward Range\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), !btn ? /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 23\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: selector.map(val => {\n            let goalStartDate = new Date(val.SubmitGoal.GoalStartDate);\n            const newDateForEndDate = new Date(val.submitDate);\n            const goalStartTime = goalStartDate.getTime();\n            const getEndTime = newDateForEndDate.getTime();\n            const oneDayTime = 1000 * 3600 * 24;\n            const takeNumberOfDays = (getEndTime - goalStartTime) / oneDayTime;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"goals_img\",\n                  src: val.uploadImgUlr,\n                  alt: \"...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.SubmitGoal.inputValues.eventName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [val.SubmitGoal.inputValues.numberOfDays, \" days\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: takeNumberOfDays > val.SubmitGoal.inputValues.numberOfDays ? \"late\" : \"submit on time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.SubmitGoal.inputValues.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: `${val.SubmitGoal.inputValues.rewardMin} - ${val.SubmitGoal.inputValues.rewardMax}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"actions_btns\",\n                children: [!btn ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => openApprovedForm(val),\n                  children: \"approved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 23\n                }, this) : null, !declineBtn ? !undoFunc ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view_icons\",\n                  onClick: () => handleDeclineGoals(val),\n                  children: \"decline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view_icons\",\n                  onClick: !approvedUndoFunc ? () => handleUndoDeclineGoals(val) : () => handleApprovedUndo(val),\n                  children: \"Undo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 25\n                }, this) : null, declineForReported ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view_icons\",\n                  onClick: () => handleDeclineReportGoals(val),\n                  children: \"decline\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 23\n                }, this) : null, undoForReported ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view_icons\",\n                  onClick: () => handleUndoReportedGoals(val),\n                  children: \"undo reported\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 23\n                }, this) : null, undoFake ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"view_icons\",\n                  onClick: () => handleUndoFakeGoals(val),\n                  children: \"undo fake\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 23\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this)]\n            }, val.submitGoalId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubmitGoalsTable, \"rp9A9uxN1wB4G14mL/a/eEFwLI4=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = SubmitGoalsTable;\nexport default SubmitGoalsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitGoalsTable\");","map":{"version":3,"sources":["/Users/sidorelakollcaku/Desktop/PROJECT1/src/Pages/DashboardScreens/WithOutOrganizations/SubmitGoals/SubmitGoalsTable.jsx"],"names":["React","useEffect","useState","useSelector","firebase","ApprovedForm","send","SubmitGoalsTable","selector","btn","undoFunc","declineBtn","approvedUndoFunc","declineForReported","undoForReported","undoFake","db","database","open","setOpen","goalId","setGoalId","percantage","setPercentage","reward","setReward","rewardRange","setRewardRange","organizationUserId","setOrganizationUserId","loading","userBalance","setUserBalance","userMyGoalId","setUserMyGoalId","userInvest","setUserInvest","openApprovedForm","event","submitGoalId","SubmitGoal","myGoalId","orgUserId","inputValues","rewardMin","userInvestment","ref","on","snapshot","userData","val","userBalancedb","balance","handlePercentage","target","value","handleReward","handleClose","handleApprovedGoals","approveData","approved","pending","submit","isReport","pendingData","update","Number","handleDeclineGoals","decline","handleUndoDeclineGoals","balanceSelector","state","goalReducer","orgUsers","allUsersSelector","handleApprovedUndo","getPrevReward","updateData","filter","id","userBlnce","handleUndoReportedGoals","handleDeclineReportGoals","acceptReport","then","userReducer","allUsers","user","userIdMain","to","email","to_name","userName","from_email_name","subject","message","from","reply_to","process","env","REACT_APP_EMAIL_JS_USER_ID","console","log","catch","err","remove","handleUndoFakeGoals","approvedinterVal","setInterval","length","inputVal","getStartDate","Date","GoalStartDate","endDate","currentDate","setDate","getDate","numberOfDays","randomNumGenerate","Math","floor","random","rewardMax","getTime","filterGoalUser","approvedObj","clearInterval","imgUrl","setImgUrl","showImg","setShowImg","handleSeeImage","handleCloseImg","map","goalStartDate","newDateForEndDate","submitDate","goalStartTime","getEndTime","oneDayTime","takeNumberOfDays","uploadImgUlr","eventName","category"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,YAAP,MAAyB,kDAAzB;AACA,SAASC,IAAT,QAAqB,aAArB;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AACxBC,EAAAA,QADwB;AAExBC,EAAAA,GAFwB;AAGxBC,EAAAA,QAHwB;AAIxBC,EAAAA,UAJwB;AAKxBC,EAAAA,gBALwB;AAMxBC,EAAAA,kBANwB;AAOxBC,EAAAA,eAPwB;AAQxBC,EAAAA;AARwB,CAAD,KASnB;AAAA;;AACJ,QAAMC,EAAE,GAAGZ,QAAQ,CAACa,QAAT,EAAX,CADI,CAGJ;;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAA9B;AACA,MAAI,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAI,CAACsB,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAAC0B,kBAAD,EAAqBC,qBAArB,IAA8C3B,QAAQ,CAAC,EAAD,CAA1D;AACA,MAAI,CAAC4B,OAAD,IAAY5B,QAAQ,CAAC,KAAD,CAAxB;AACA,MAAI,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,EAAD,CAA9C;AACA,MAAI,CAACiC,UAAD,EAAYC,aAAZ,IAA6BlC,QAAQ,EAAzC,CAbI,CAeJ;;AACA,QAAMmC,gBAAgB,GAAIC,KAAD,IAAW;AAClCnB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,IAAAA,SAAS,CAACiB,KAAK,CAACC,YAAP,CAAT;AACAL,IAAAA,eAAe,CAACI,KAAK,CAACE,UAAN,CAAiBC,QAAlB,CAAf;AACAZ,IAAAA,qBAAqB,CAACS,KAAK,CAACI,SAAP,CAArB;AACAf,IAAAA,cAAc,CACX,GAAEW,KAAK,CAACE,UAAN,CAAiBG,WAAjB,CAA6BC,SAAU,MAAKN,KAAK,CAACE,UAAN,CAAiBG,WAAjB,CAA6BC,SAAU,EAD1E,CAAd;AAGAR,IAAAA,aAAa,CAACE,KAAK,CAACE,UAAN,CAAiBK,cAAlB,CAAb,CARkC,CAUlC;;AACA7B,IAAAA,EAAE,CAAC8B,GAAH,CAAQ,6BAA4BR,KAAK,CAACI,SAAU,EAApD,EAAuDK,EAAvD,CACE,OADF,EAEGC,QAAD,IAAc;AACZ,UAAIC,QAAQ,GAAGD,QAAQ,CAACE,GAAT,EAAf;AACA,UAAIC,aAAa,GAAGF,QAAQ,CAACG,OAA7B;AACApB,MAAAA,cAAc,CAACmB,aAAD,CAAd;AACD,KANH;AAQD,GAnBD;;AAqBA,QAAME,gBAAgB,GAAIf,KAAD,IAAW;AAClCf,IAAAA,aAAa,CAACe,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIlB,KAAD,IAAW;AAC9Bb,IAAAA,SAAS,CAACa,KAAK,CAACgB,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD,CAzCI,CA4CJ;;;AACA,QAAME,WAAW,GAAG,MAAM;AACxBtC,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD,CA7CI,CAiDJ;;;AACA,QAAMuC,mBAAmB,GAAG,MAAM;AAChC,QAAIC,WAAW,GAAG;AAChBC,MAAAA,QAAQ,EAAE,IADM;AAEhBC,MAAAA,OAAO,EAAE,KAFO;AAGhBvC,MAAAA,UAAU,EAAEA,UAHI;AAIhBE,MAAAA,MAAM,EAAEA,MAJQ;AAKhBsC,MAAAA,MAAM,EAAE,IALQ;AAMhBC,MAAAA,QAAQ,EAAE;AANM,KAAlB;AAQA,QAAIC,WAAW,GAAG;AAChBJ,MAAAA,QAAQ,EAAE,IADM;AAEhBtC,MAAAA,UAAU,EAAEA,UAFI;AAGhBuC,MAAAA,OAAO,EAAE,IAHO;AAIhBrC,MAAAA,MAAM,EAAEA,MAJQ;AAKhBsC,MAAAA,MAAM,EAAE,IALQ;AAMhBC,MAAAA,QAAQ,EAAE;AANM,KAAlB;;AAQA,QAAIzC,UAAU,KAAK,KAAnB,EAA0B;AACxB;AACAN,MAAAA,EAAE,CAAC8B,GAAH,CAAQ,6BAA4BlB,kBAAmB,EAAvD,EAA0DqC,MAA1D,CAAiE;AAC/Db,QAAAA,OAAO,EAAEc,MAAM,CAACnC,WAAD,CAAN,GAAsBmC,MAAM,CAAC1C,MAAD,CAA5B,GAAuCW;AADe,OAAjE;AAGAnB,MAAAA,EAAE,CAAC8B,GAAH,CACG,6BAA4BlB,kBAAmB,YAAWK,YAAa,EAD1E,EAEEgC,MAFF,CAESN,WAFT;AAGA3C,MAAAA,EAAE,CAAC8B,GAAH,CAAQ,mCAAkC1B,MAAO,EAAjD,EAAoD6C,MAApD,CAA2DN,WAA3D;AACApC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,MAAAA,SAAS,CAAC,EAAD,CAAT;AACAgC,MAAAA,WAAW;AACZ,KAZD,MAYO;AACLzC,MAAAA,EAAE,CAAC8B,GAAH,CAAQ,mCAAkC1B,MAAO,EAAjD,EAAoD6C,MAApD,CAA2DD,WAA3D;AACAhD,MAAAA,EAAE,CAAC8B,GAAH,CACG,6BAA4BlB,kBAAmB,YAAWK,YAAa,EAD1E,EAEEgC,MAFF,CAESD,WAFT;AAIAP,MAAAA,WAAW;AACXlC,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD;AACF,GAvCD;;AAyCA,QAAM0C,kBAAkB,GAAI7B,KAAD,IAAW;AACpCtB,IAAAA,EAAE,CAAC8B,GAAH,CAAQ,mCAAkCR,KAAK,CAACC,YAAa,EAA7D,EAAgE0B,MAAhE,CAAuE;AACrEG,MAAAA,OAAO,EAAE;AAD4D,KAAvE;AAGApD,IAAAA,EAAE,CAAC8B,GAAH,CACG,qCAAoCR,KAAK,CAACE,UAAN,CAAiBC,QAAS,EADjE,EAEEwB,MAFF,CAES;AACPG,MAAAA,OAAO,EAAE;AADF,KAFT;AAKD,GATD;;AAWA,QAAMC,sBAAsB,GAAI/B,KAAD,IAAW;AACxCtB,IAAAA,EAAE,CAAC8B,GAAH,CAAQ,mCAAkCR,KAAK,CAACC,YAAa,EAA7D,EAAgE0B,MAAhE,CAAuE;AACrEG,MAAAA,OAAO,EAAE;AAD4D,KAAvE;AAGApD,IAAAA,EAAE,CAAC8B,GAAH,CACG,qCAAoCR,KAAK,CAACE,UAAN,CAAiBC,QAAS,EADjE,EAEEwB,MAFF,CAES;AACPG,MAAAA,OAAO,EAAE;AADF,KAFT;AAKD,GATD;;AAWA,QAAME,eAAe,GAAGnE,WAAW,CAAEoE,KAAD,IAAW;AAC7C,WAAOA,KAAK,CAACC,WAAN,CAAkBC,QAAzB;AACD,GAFkC,CAAnC;AAGA,QAAMC,gBAAgB,GAAGvE,WAAW,CAAEoE,KAAD,IAAW;AAC9C,WAAOA,KAAP;AACD,GAFmC,CAApC,CApHI,CAwHJ;;AACA,QAAMI,kBAAkB,GAAIrC,KAAD,IAAW;AACpC,UAAMsC,aAAa,GAAGtC,KAAK,CAACd,MAA5B;AACA,UAAMqD,UAAU,GAAG;AACjBjB,MAAAA,QAAQ,EAAE,KADO;AAEjBC,MAAAA,OAAO,EAAE,KAFQ;AAGjBvC,MAAAA,UAAU,EAAE,EAHK;AAIjBE,MAAAA,MAAM,EAAE;AAJS,KAAnB;AAMA8C,IAAAA,eAAe,CAACQ,MAAhB,CAAwB5B,GAAD,IAAS;AAC9B,UAAIA,GAAG,CAAC6B,EAAJ,KAAWzC,KAAK,CAACI,SAArB,EAAgC;AAC9B,YAAIsC,SAAS,GAAG9B,GAAG,CAACE,OAApB;AACApC,QAAAA,EAAE,CAAC8B,GAAH,CAAQ,6BAA4BR,KAAK,CAACI,SAAU,EAApD,EAAuDuB,MAAvD,CAA8D;AAC5Db,UAAAA,OAAO,EAAE4B,SAAS,IAAKd,MAAM,CAACU,aAAD,CAAN,GAAuBtC,KAAK,CAACE,UAAN,CAAiBK,cAA7C;AAD0C,SAA9D;AAGA7B,QAAAA,EAAE,CAAC8B,GAAH,CACG,6BAA4BR,KAAK,CAACI,SAAU,YAAWJ,KAAK,CAACE,UAAN,CAAiBC,QAAS,EADpF,EAEEwB,MAFF,CAESY,UAFT;AAGA7D,QAAAA,EAAE,CAAC8B,GAAH,CAAQ,mCAAkCR,KAAK,CAACC,YAAa,EAA7D,EAAgE0B,MAAhE,CACEY,UADF;AAGD;AACF,KAbD;AAcD,GAtBD,CAzHI,CAiJJ;;;AACA,QAAMI,uBAAuB,GAAI3C,KAAD,IAAW;AACzCtB,IAAAA,EAAE,CAAC8B,GAAH,CAAQ,mCAAkCR,KAAK,CAACC,YAAa,EAA7D,EAAgE0B,MAAhE,CAAuE;AACrEF,MAAAA,QAAQ,EAAE;AAD2D,KAAvE;AAGD,GAJD,CAlJI,CAwJJ;;;AACA,QAAMmB,wBAAwB,GAAI5C,KAAD,IAAW;AAC1C,UAAMsC,aAAa,GAAGtC,KAAK,CAACd,MAA5B;AACA,UAAMqD,UAAU,GAAG;AACjBjB,MAAAA,QAAQ,EAAE,KADO;AAEjBtC,MAAAA,UAAU,EAAE,EAFK;AAGjBuC,MAAAA,OAAO,EAAE,KAHQ;AAIjBrC,MAAAA,MAAM,EAAE,EAJS;AAKjBuC,MAAAA,QAAQ,EAAE,IALO;AAMjBoB,MAAAA,YAAY,EAAE,IANG;AAOjBrB,MAAAA,MAAM,EAAE;AAPS,KAAnB;AASAQ,IAAAA,eAAe,CAACQ,MAAhB,CAAwB5B,GAAD,IAAS;AAC9B,UAAIA,GAAG,CAAC6B,EAAJ,KAAWzC,KAAK,CAACI,SAArB,EAAgC;AAC9B,YAAIsC,SAAS,GAAG9B,GAAG,CAACE,OAApB;AACApC,QAAAA,EAAE,CAAC8B,GAAH,CAAQ,6BAA4BR,KAAK,CAACI,SAAU,EAApD,EAAuDuB,MAAvD,CAA8D;AAC5Db,UAAAA,OAAO,EACL4B,SAAS,IAAId,MAAM,CAACU,aAAD,CAAN,GAAwBV,MAAM,CAACU,aAAD,CAA9B,GAAgD,CAApD;AAFiD,SAA9D;AAIA5D,QAAAA,EAAE,CAAC8B,GAAH,CAAQ,mCAAkCR,KAAK,CAACC,YAAa,EAA7D,EACG0B,MADH,CACUY,UADV,EAEGO,IAFH,CAEQ,MAAM;AACVV,UAAAA,gBAAgB,CAACW,WAAjB,CAA6BC,QAA7B,CAAsCR,MAAtC,CAA8CS,IAAD,IAAU;AACrD,gBAAIA,IAAI,CAACR,EAAL,KAAYzC,KAAK,CAACkD,UAAtB,EAAkC;AAChC;AACAlF,cAAAA,IAAI,EACF;AACA;AACA,+BAHE,EAIF,kBAJE,EAKF;AACEmF,gBAAAA,EAAE,EAAEF,IAAI,CAACG,KADX;AAEEC,gBAAAA,OAAO,EAAG,GAAErD,KAAK,CAACsD,QAAS,EAF7B;AAGEC,gBAAAA,eAAe,EAAE,OAHnB;AAIEC,gBAAAA,OAAO,EAAE,EAJX;AAKEC,gBAAAA,OAAO,EAAG,8DALZ;AAMEC,gBAAAA,IAAI,EAAE,iBANR;AAOEC,gBAAAA,QAAQ,EAAE;AAPZ,eALE,EAcFC,OAAO,CAACC,GAAR,CAAYC,0BAdV,CAAJ,CAgBGhB,IAhBH,CAgBQ,MAAM;AACViB,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,eAlBH,EAmBGC,KAnBH,CAmBUC,GAAD,IAAS;AACdH,gBAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CE,GAA7C;AACD,eArBH;AAsBD;AACF,WA1BD;AA2BD,SA9BH;AAgCAxF,QAAAA,EAAE,CAAC8B,GAAH,CACG,6BAA4BR,KAAK,CAACI,SAAU,YAAWJ,KAAK,CAACE,UAAN,CAAiBC,QAAS,EADpF,EAEEwB,MAFF,CAESY,UAFT;AAGA7D,QAAAA,EAAE,CAAC8B,GAAH,CAAQ,6BAA4BR,KAAK,CAACC,YAAa,EAAvD,EAA0DkE,MAA1D;AACAzF,QAAAA,EAAE,CAAC8B,GAAH,CAAQ,gCAA+BR,KAAK,CAACC,YAAa,EAA1D,EAA6DkE,MAA7D;AACD;AACF,KA7CD;AA8CD,GAzDD,CAzJI,CAoNJ;;;AACA,QAAMC,mBAAmB,GAAIpE,KAAD,IAAW;AACrCtB,IAAAA,EAAE,CAAC8B,GAAH,CAAQ,mCAAkCR,KAAK,CAACC,YAAa,EAA7D,EAAgE0B,MAAhE,CAAuE;AACrEkB,MAAAA,YAAY,EAAE;AADuD,KAAvE;AAGAnE,IAAAA,EAAE,CAAC8B,GAAH,CACG,6BAA4BR,KAAK,CAACI,SAAU,YAAWJ,KAAK,CAACE,UAAN,CAAiBC,QAAS,EADpF,EAEEwB,MAFF,CAES;AACPkB,MAAAA,YAAY,EAAE;AADP,KAFT;AAKD,GATD,CArNI,CAgOJ;;;AAEAlF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0G,gBAAgB,GAAGC,WAAW,CAAC,MAAM;AACvC,UAAIpG,QAAQ,CAACqG,MAAb,EAAqB;AACnBrG,QAAAA,QAAQ,CAACsE,MAAT,CAAiB5B,GAAD,IAAS;AACvB,cACE,CAACA,GAAG,CAACa,QAAL,IACA,CAACb,GAAG,CAACkB,OADL,IAEA,CAAClB,GAAG,CAACiC,YAFL,IAGA,CAACjC,GAAG,CAACW,OAHL,IAIAX,GAAG,CAACY,MAJJ,IAKA,CAACZ,GAAG,CAACU,QANP,EAOE;AACA,kBAAMkD,QAAQ,GAAG5D,GAAG,CAACV,UAAJ,CAAeG,WAAhC;AACA,gBAAIoE,YAAY,GAAG,IAAIC,IAAJ,CAAS9D,GAAG,CAACV,UAAJ,CAAeyE,aAAxB,CAAnB;AACA,gBAAIC,OAAO,GAAG,IAAIF,IAAJ,CAASD,YAAT,CAAd;AACA,gBAAII,WAAW,GAAG,IAAIH,IAAJ,EAAlB;AACAE,YAAAA,OAAO,CAACE,OAAR,CAAgBF,OAAO,CAACG,OAAR,KAAoBnD,MAAM,CAAC4C,QAAQ,CAACQ,YAAV,CAA1C;AACA,gBAAIC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CACtBD,IAAI,CAACE,MAAL,MACGxD,MAAM,CAAC4C,QAAQ,CAACa,SAAV,CAAN,GACCzD,MAAM,CAAC4C,QAAQ,CAAClE,SAAV,CADP,GAECsB,MAAM,CAAC4C,QAAQ,CAAClE,SAAV,CAHV,CADsB,CAAxB;;AAMA,gBAAIuE,WAAW,CAACS,OAAZ,MAAyBV,OAAO,CAACU,OAAR,EAA7B,EAAgD;AAC9C,oBAAMC,cAAc,GAAGvD,eAAe,CAACQ,MAAhB,CACpBS,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAY7B,GAAG,CAACR,SADL,CAAvB;AAGA,oBAAMoF,WAAW,GAAG;AAClBlE,gBAAAA,QAAQ,EAAE,IADQ;AAElBC,gBAAAA,OAAO,EAAE,KAFS;AAGlBvC,gBAAAA,UAAU,EAAE,KAHM;AAIlBE,gBAAAA,MAAM,EAAE+F,iBAJU;AAKlBzD,gBAAAA,MAAM,EAAE,IALU;AAMlBC,gBAAAA,QAAQ,EAAE;AANQ,eAApB;AAQA/C,cAAAA,EAAE,CAAC8B,GAAH,CAAQ,6BAA4BI,GAAG,CAACR,SAAU,EAAlD,EAAqDuB,MAArD,CAA4D;AAC1Db,gBAAAA,OAAO,EAAEyE,cAAc,CAAC,CAAD,CAAd,CAAkBzE,OAAlB,GAA4BmE,iBAA5B,GAAgDrE,GAAG,CAACV,UAAJ,CAAeK;AADd,eAA5D;AAGA7B,cAAAA,EAAE,CAAC8B,GAAH,CACG,6BAA4BI,GAAG,CAACR,SAAU,YAAWQ,GAAG,CAACV,UAAJ,CAAeC,QAAS,EADhF,EAEEwB,MAFF,CAES6D,WAFT;AAGA9G,cAAAA,EAAE,CAAC8B,GAAH,CAAQ,mCAAkCI,GAAG,CAACX,YAAa,EAA3D,EACG0B,MADH,CACU6D,WADV,EAEG1C,IAFH,CAEQ,MAAM;AACViB,gBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,eAJH;AAKAD,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBpD,GAAnB;AACD;AACF,WA5CD,CA6CA;AA7CA,eA8CK,IACHA,GAAG,CAACa,QAAJ,IACA,CAACb,GAAG,CAACkB,OADL,IAEA,CAAClB,GAAG,CAACiC,YAFL,IAGA,CAACjC,GAAG,CAACW,OAHL,IAIAX,GAAG,CAACY,MAJJ,IAKA,CAACZ,GAAG,CAACU,QANF,EAOH;AACA,kBAAMkD,QAAQ,GAAG5D,GAAG,CAACV,UAAJ,CAAeG,WAAhC;AACA,gBAAIoE,YAAY,GAAG,IAAIC,IAAJ,CAAS9D,GAAG,CAACV,UAAJ,CAAeyE,aAAxB,CAAnB;AACA,gBAAIC,OAAO,GAAG,IAAIF,IAAJ,CAASD,YAAT,CAAd;AACA,gBAAII,WAAW,GAAG,IAAIH,IAAJ,EAAlB;AACAE,YAAAA,OAAO,CAACE,OAAR,CAAgBF,OAAO,CAACG,OAAR,KAAoBnD,MAAM,CAAC4C,QAAQ,CAACQ,YAAV,CAA1C;;AACA,gBAAIH,WAAW,CAACS,OAAZ,MAAyBV,OAAO,CAACU,OAAR,EAA7B,EAAgD;AAC9C5G,cAAAA,EAAE,CAAC8B,GAAH,CACG,mCAAkCI,GAAG,CAACX,YAAa,EADtD,EAEE0B,MAFF,CAES;AACPG,gBAAAA,OAAO,EAAE,IADF;AAEPN,gBAAAA,MAAM,EAAE,KAFD;AAGPC,gBAAAA,QAAQ,EAAE;AAHH,eAFT;AAOA/C,cAAAA,EAAE,CAAC8B,GAAH,CACG,6BAA4BI,GAAG,CAACR,SAAU,YAAWQ,GAAG,CAACV,UAAJ,CAAeC,QAAS,EADhF,EAEEwB,MAFF,CAES;AACPG,gBAAAA,OAAO,EAAE,IADF;AAEPN,gBAAAA,MAAM,EAAE,KAFD;AAGPC,gBAAAA,QAAQ,EAAE;AAHH,eAFT;AAOD;AACF;AACF,SA7ED;AA8ED;AACF,KAjFiC,EAiF/B,KAjF+B,CAAlC;AAkFA,WAAO,MAAM;AACXgE,MAAAA,aAAa,CAACpB,gBAAD,CAAb;AACD,KAFD;AAGD,GAtFQ,CAAT,CAlOI,CA0TJ;;AACA,MAAI,CAACqB,MAAD,EAASC,SAAT,IAAsB/H,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAI,CAACgI,OAAD,EAAUC,UAAV,IAAwBjI,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMkI,cAAc,GAAI9F,KAAD,IAAW;AAChC2F,IAAAA,SAAS,CAAC3F,KAAD,CAAT;AACA6F,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;;AAIA,QAAME,cAAc,GAAG,MAAM;AAC3BF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAHD,CAjUI,CAsUJ;;;AAEA,MAAI,CAACzH,QAAQ,CAACqG,MAAd,EAAsB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,IAAI,EAAE3F,IADR;AAEE,MAAA,eAAe,EAAEmB,gBAFnB;AAGE,MAAA,YAAY,EAAEgB,gBAHhB;AAIE,MAAA,gBAAgB,EAAEG,YAJpB;AAKE,MAAA,UAAU,EAAEhC,MALd;AAME,MAAA,QAAQ,EAAC,UANX;AAOE,MAAA,UAAU,EAAC,QAPb;AAQE,MAAA,KAAK,EAAEE,WART;AASE,MAAA,iBAAiB,EAAEgC,mBATrB;AAUE,MAAA,WAAW,EAAED,WAVf;AAWE,MAAA,OAAO,EAAE3B;AAXX;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,YAAD;AACE,MAAA,eAAe,EAAEsG,cADnB;AAEE,MAAA,MAAM,EAAEJ,MAFV;AAGE,MAAA,IAAI,EAAEE,OAHR;AAIE,MAAA,QAAQ,EAAC,OAJX;AAKE,MAAA,WAAW,EAAEG;AALf;AAAA;AAAA;AAAA;AAAA,YAdF,eAqBE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,EAQG,CAAC5H,GAAD,gBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP,GAA0B,IAR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AAAA,oBACGD,QAAQ,CAAC8H,GAAT,CAAcpF,GAAD,IAAS;AACrB,gBAAIqF,aAAa,GAAG,IAAIvB,IAAJ,CAAS9D,GAAG,CAACV,UAAJ,CAAeyE,aAAxB,CAApB;AACA,kBAAMuB,iBAAiB,GAAG,IAAIxB,IAAJ,CAAS9D,GAAG,CAACuF,UAAb,CAA1B;AACA,kBAAMC,aAAa,GAAGH,aAAa,CAACX,OAAd,EAAtB;AACA,kBAAMe,UAAU,GAAGH,iBAAiB,CAACZ,OAAlB,EAAnB;AACA,kBAAMgB,UAAU,GAAG,OAAO,IAAP,GAAc,EAAjC;AACA,kBAAMC,gBAAgB,GACpB,CAACF,UAAU,GAAGD,aAAd,IAA+BE,UADjC;AAEA,gCACE;AAAA,sCACE;AAAA,uCACE;AACE,kBAAA,SAAS,EAAC,WADZ;AAEE,kBAAA,GAAG,EAAE1F,GAAG,CAAC4F,YAFX;AAGE,kBAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE;AAAA,0BAAK5F,GAAG,CAACV,UAAJ,CAAeG,WAAf,CAA2BoG;AAAhC;AAAA;AAAA;AAAA;AAAA,sBARF,eASE;AAAA,0BAAK7F,GAAG,CAAC0C;AAAT;AAAA;AAAA;AAAA;AAAA,sBATF,eAUE;AAAA,2BAAK1C,GAAG,CAACV,UAAJ,CAAeG,WAAf,CAA2B2E,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,eAWE;AAAA,0BACGuB,gBAAgB,GAAG3F,GAAG,CAACV,UAAJ,CAAeG,WAAf,CAA2B2E,YAA9C,GACG,MADH,GAEG;AAHN;AAAA;AAAA;AAAA;AAAA,sBAXF,eAgBE;AAAA,0BAAKpE,GAAG,CAACV,UAAJ,CAAeG,WAAf,CAA2BqG;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAhBF,eAiBE;AAAA,0BAAM,GAAE9F,GAAG,CAACV,UAAJ,CAAeG,WAAf,CAA2BC,SAAU,MAAKM,GAAG,CAACV,UAAJ,CAAeG,WAAf,CAA2BgF,SAAU;AAAvF;AAAA;AAAA;AAAA;AAAA,sBAjBF,eAkBE;AAAI,gBAAA,SAAS,EAAC,cAAd;AAAA,2BACG,CAAClH,GAAD,gBACC;AAAQ,kBAAA,OAAO,EAAE,MAAM4B,gBAAgB,CAACa,GAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,GAIG,IALN,EAMG,CAACvC,UAAD,GACC,CAACD,QAAD,gBACE;AACE,kBAAA,SAAS,EAAC,YADZ;AAEE,kBAAA,OAAO,EAAE,MAAMyD,kBAAkB,CAACjB,GAAD,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,gBAQE;AACE,kBAAA,SAAS,EAAC,YADZ;AAEE,kBAAA,OAAO,EACL,CAACtC,gBAAD,GACI,MAAMyD,sBAAsB,CAACnB,GAAD,CADhC,GAEI,MAAMyB,kBAAkB,CAACzB,GAAD,CALhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBATH,GAoBG,IA1BN,EA4BGrC,kBAAkB,gBACjB;AACE,kBAAA,SAAS,EAAC,YADZ;AAEE,kBAAA,OAAO,EAAE,MAAMqE,wBAAwB,CAAChC,GAAD,CAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADiB,GAOf,IAnCN,EAoCGpC,eAAe,gBACd;AACE,kBAAA,SAAS,EAAC,YADZ;AAEE,kBAAA,OAAO,EAAE,MAAMmE,uBAAuB,CAAC/B,GAAD,CAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADc,GAOZ,IA3CN,EA4CGnC,QAAQ,gBACP;AACE,kBAAA,SAAS,EAAC,YADZ;AAEE,kBAAA,OAAO,EAAE,MAAM2F,mBAAmB,CAACxD,GAAD,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADO,GAOL,IAnDN;AAAA;AAAA;AAAA;AAAA;AAAA,sBAlBF;AAAA,eAASA,GAAG,CAACX,YAAb;AAAA;AAAA;AAAA;AAAA,oBADF;AA0ED,WAlFA;AADH;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6HD,CAldD;;GAAMhC,gB;UA0HoBJ,W,EAGCA,W;;;KA7HrBI,gB;AAodN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport firebase from \"../../../../Config/FirebaseConfig\";\nimport ApprovedForm from \"../../WithOrganizations/SubmitGoals/ApprovedForm\";\nimport { send } from \"emailjs-com\";\n\nconst SubmitGoalsTable = ({\n  selector,\n  btn,\n  undoFunc,\n  declineBtn,\n  approvedUndoFunc,\n  declineForReported,\n  undoForReported,\n  undoFake\n}) => {\n  const db = firebase.database();\n\n  // approved form working\n  let [open, setOpen] = useState(false);\n  let [goalId, setGoalId] = useState(\"\");\n  let [percantage, setPercentage] = useState(\"\");\n  let [reward, setReward] = useState(\"\");\n  let [rewardRange, setRewardRange] = useState(\"\");\n  let [organizationUserId, setOrganizationUserId] = useState(\"\");\n  let [loading] = useState(false);\n  let [userBalance, setUserBalance] = useState(\"\");\n  let [userMyGoalId, setUserMyGoalId] = useState(\"\");\n  let [userInvest,setUserInvest] = useState()\n\n  // working for approved form\n  const openApprovedForm = (event) => {\n    setOpen(true);\n    setGoalId(event.submitGoalId);\n    setUserMyGoalId(event.SubmitGoal.myGoalId);\n    setOrganizationUserId(event.orgUserId);\n    setRewardRange(\n      `${event.SubmitGoal.inputValues.rewardMin} - ${event.SubmitGoal.inputValues.rewardMin}`\n    );\n    setUserInvest(event.SubmitGoal.userInvestment)\n\n    // get organization user info to get prev balance\n    db.ref(`withoutOrganization/users/${event.orgUserId}`).on(\n      \"value\",\n      (snapshot) => {\n        let userData = snapshot.val();\n        let userBalancedb = userData.balance;\n        setUserBalance(userBalancedb);\n      }\n    );\n  };\n\n  const handlePercentage = (event) => {\n    setPercentage(event.target.value);\n  };\n\n  const handleReward = (event) => {\n    setReward(event.target.value);\n  };\n  // form close function\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // goals delete function\n  const handleApprovedGoals = () => {\n    let approveData = {\n      approved: true,\n      pending: false,\n      percantage: percantage,\n      reward: reward,\n      submit: true,\n      isReport: false,\n    };\n    let pendingData = {\n      approved: true,\n      percantage: percantage,\n      pending: true,\n      reward: reward,\n      submit: true,\n      isReport: false,\n    };\n    if (percantage === \"100\") {\n      // console.log(\"100%\");\n      db.ref(`withoutOrganization/users/${organizationUserId}`).update({\n        balance: Number(userBalance) + Number(reward) + userInvest,\n      });\n      db.ref(\n        `withoutOrganization/users/${organizationUserId}/myGoals/${userMyGoalId}`\n      ).update(approveData);\n      db.ref(`withoutOrganization/submitGoals/${goalId}`).update(approveData);\n      setPercentage(\"\");\n      setReward(\"\");\n      handleClose();\n    } else {\n      db.ref(`withoutOrganization/submitGoals/${goalId}`).update(pendingData);\n      db.ref(\n        `withoutOrganization/users/${organizationUserId}/myGoals/${userMyGoalId}`\n      ).update(pendingData);\n\n      handleClose();\n      setPercentage(\"\");\n      setReward(\"\");\n    }\n  };\n\n  const handleDeclineGoals = (event) => {\n    db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update({\n      decline: true,\n    });\n    db.ref(\n      `withoutOrganization/users/myGoals/${event.SubmitGoal.myGoalId}`\n    ).update({\n      decline: true,\n    });\n  };\n\n  const handleUndoDeclineGoals = (event) => {\n    db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update({\n      decline: false,\n    });\n    db.ref(\n      `withoutOrganization/users/myGoals/${event.SubmitGoal.myGoalId}`\n    ).update({\n      decline: false,\n    });\n  };\n\n  const balanceSelector = useSelector((state) => {\n    return state.goalReducer.orgUsers;\n  });\n  const allUsersSelector = useSelector((state) => {\n    return state;\n  });\n\n  // approved undo function\n  const handleApprovedUndo = (event) => {\n    const getPrevReward = event.reward;\n    const updateData = {\n      approved: false,\n      pending: false,\n      percantage: \"\",\n      reward: \"\",\n    };\n    balanceSelector.filter((val) => {\n      if (val.id === event.orgUserId) {\n        let userBlnce = val.balance;\n        db.ref(`withoutOrganization/users/${event.orgUserId}`).update({\n          balance: userBlnce -  (Number(getPrevReward)+ event.SubmitGoal.userInvestment ),\n        });\n        db.ref(\n          `withoutOrganization/users/${event.orgUserId}/myGoals/${event.SubmitGoal.myGoalId}`\n        ).update(updateData);\n        db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update(\n          updateData\n        );\n      }\n    });\n  };\n\n  // undo reported goal\n  const handleUndoReportedGoals = (event) => {\n    db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update({\n      isReport: false,\n    });\n  };\n\n  // decline if goal is reported\n  const handleDeclineReportGoals = (event) => {\n    const getPrevReward = event.reward;\n    const updateData = {\n      approved: false,\n      percantage: \"\",\n      pending: false,\n      reward: \"\",\n      isReport: true,\n      acceptReport: true,\n      submit: false,\n    };\n    balanceSelector.filter((val) => {\n      if (val.id === event.orgUserId) {\n        let userBlnce = val.balance;\n        db.ref(`withoutOrganization/users/${event.orgUserId}`).update({\n          balance:\n            userBlnce - (Number(getPrevReward) ? Number(getPrevReward) : 0),\n        });\n        db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`)\n          .update(updateData)\n          .then(() => {\n            allUsersSelector.userReducer.allUsers.filter((user) => {\n              if (user.id === event.userIdMain) {\n                // console.log(user)\n                send(\n                  // process.env.REACT_APP_EMAIL_JS_SERVICE_ID,\n                  // process.env.REACT_APP_EMAIL_JS_TEMPLATE_ID,\n                  \"service_q1galup\",\n                  \"template_aq5fbiv\",\n                  {\n                    to: user.email,\n                    to_name: `${event.userName}`,\n                    from_email_name: \"TRYVE\",\n                    subject: \"\",\n                    message: `TRYVE reported your goal please retake good picture. Thanks!`,\n                    from: \"tryve@gmail.com\",\n                    reply_to: \"tryve@gmail.com\",\n                  },\n                  process.env.REACT_APP_EMAIL_JS_USER_ID\n                )\n                  .then(() => {\n                    console.log(\"success...\");\n                  })\n                  .catch((err) => {\n                    console.log(\"admin Email sending FAILED...\", err);\n                  });\n              }\n            });\n          });\n\n        db.ref(\n          `withoutOrganization/users/${event.orgUserId}/myGoals/${event.SubmitGoal.myGoalId}`\n        ).update(updateData);\n        db.ref(`withoutOrganization/likes/${event.submitGoalId}`).remove();\n        db.ref(`withoutOrganization/comments/${event.submitGoalId}`).remove();\n      }\n    });\n  };\n\n  // undo fake goals\n  const handleUndoFakeGoals = (event) => {\n    db.ref(`withoutOrganization/submitGoals/${event.submitGoalId}`).update({\n      acceptReport: false,\n    });\n    db.ref(\n      `withoutOrganization/users/${event.orgUserId}/myGoals/${event.SubmitGoal.myGoalId}`\n    ).update({\n      acceptReport: false,\n    });\n  };\n\n  // automatically approved working\n\n  useEffect(() => {\n    let approvedinterVal = setInterval(() => {\n      if (selector.length) {\n        selector.filter((val) => {\n          if (\n            !val.isReport &&\n            !val.decline &&\n            !val.acceptReport &&\n            !val.pending &&\n            val.submit &&\n            !val.approved\n          ) {\n            const inputVal = val.SubmitGoal.inputValues;\n            let getStartDate = new Date(val.SubmitGoal.GoalStartDate);\n            let endDate = new Date(getStartDate);\n            let currentDate = new Date();\n            endDate.setDate(endDate.getDate() + Number(inputVal.numberOfDays));\n            let randomNumGenerate = Math.floor(\n              Math.random() *\n                (Number(inputVal.rewardMax) -\n                  Number(inputVal.rewardMin) +\n                  Number(inputVal.rewardMin))\n            );\n            if (currentDate.getTime() >= endDate.getTime()) {\n              const filterGoalUser = balanceSelector.filter(\n                (user) => user.id === val.orgUserId\n              );\n              const approvedObj = {\n                approved: true,\n                pending: false,\n                percantage: \"100\",\n                reward: randomNumGenerate,\n                submit: true,\n                isReport: false,\n              };\n              db.ref(`withoutOrganization/users/${val.orgUserId}`).update({\n                balance: filterGoalUser[0].balance + randomNumGenerate + val.SubmitGoal.userInvestment,\n              });\n              db.ref(\n                `withoutOrganization/users/${val.orgUserId}/myGoals/${val.SubmitGoal.myGoalId}`\n              ).update(approvedObj);\n              db.ref(`withoutOrganization/submitGoals/${val.submitGoalId}`)\n                .update(approvedObj)\n                .then(() => {\n                  console.log(\"auto approved\");\n                });\n              console.log(\"end\", val);\n            }\n          }\n          // if goals is reported and not approved not pending only submit and someone reported then is would be decline autt\n          else if (\n            val.isReport &&\n            !val.decline &&\n            !val.acceptReport &&\n            !val.pending &&\n            val.submit &&\n            !val.approved\n          ) {\n            const inputVal = val.SubmitGoal.inputValues;\n            let getStartDate = new Date(val.SubmitGoal.GoalStartDate);\n            let endDate = new Date(getStartDate);\n            let currentDate = new Date();\n            endDate.setDate(endDate.getDate() + Number(inputVal.numberOfDays));\n            if (currentDate.getTime() >= endDate.getTime()) {\n              db.ref(\n                `withoutOrganization/submitGoals/${val.submitGoalId}`\n              ).update({\n                decline: true,\n                submit: false,\n                isReport: false,\n              });\n              db.ref(\n                `withoutOrganization/users/${val.orgUserId}/myGoals/${val.SubmitGoal.myGoalId}`\n              ).update({\n                decline: true,\n                submit: false,\n                isReport: false,\n              });\n            }\n          }\n        });\n      }\n    }, 10000);\n    return () => {\n      clearInterval(approvedinterVal);\n    };\n  });\n\n  // submit goal image function\n  let [imgUrl, setImgUrl] = useState(\"\");\n  let [showImg, setShowImg] = useState(false);\n  const handleSeeImage = (event) => {\n    setImgUrl(event);\n    setShowImg(true);\n  };\n  const handleCloseImg = () => {\n    setShowImg(false);\n    setImgUrl(\"\");\n  };\n\n  // console.log(selector);\n\n  if (!selector.length) {\n    return <div>no goals</div>;\n  }\n\n  return (\n    <div className=\"table_container\">\n      <ApprovedForm\n        open={open}\n        handleClickOpen={openApprovedForm}\n        handleSelect={handlePercentage}\n        handleInputvalue={handleReward}\n        inputValue={reward}\n        btnValue=\"Approved\"\n        labelValue=\"Reward\"\n        range={rewardRange}\n        handleAddFunction={handleApprovedGoals}\n        handleClose={handleClose}\n        loading={loading}\n      />\n      <ApprovedForm\n        handleClickOpen={handleSeeImage}\n        imgUrl={imgUrl}\n        open={showImg}\n        btnValue=\"Close\"\n        handleClose={handleCloseImg}\n      />\n      <div className=\"table_md\">\n        <table className=\"goals_table\">\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Event Name</th>\n              <th>user name</th>\n              <th>Time Limit</th>\n              {/* <th>Signed Up</th> */}\n              <th>category</th>\n              <th>Reward Range</th>\n              {!btn ? <th>Actions</th> : null}\n            </tr>\n          </thead>\n          <tbody>\n            {selector.map((val) => {\n              let goalStartDate = new Date(val.SubmitGoal.GoalStartDate);\n              const newDateForEndDate = new Date(val.submitDate);\n              const goalStartTime = goalStartDate.getTime();\n              const getEndTime = newDateForEndDate.getTime();\n              const oneDayTime = 1000 * 3600 * 24;\n              const takeNumberOfDays =\n                (getEndTime - goalStartTime) / oneDayTime;\n              return (\n                <tr key={val.submitGoalId}>\n                  <td>\n                    <img\n                      className=\"goals_img\"\n                      src={val.uploadImgUlr}\n                      alt=\"...\"\n                    />\n                  </td>\n                  <td>{val.SubmitGoal.inputValues.eventName}</td>\n                  <td>{val.userName}</td>\n                  <td>{val.SubmitGoal.inputValues.numberOfDays} days</td>\n                  <td>\n                    {takeNumberOfDays > val.SubmitGoal.inputValues.numberOfDays\n                      ? \"late\"\n                      : \"submit on time\"}\n                  </td>\n                  <td>{val.SubmitGoal.inputValues.category}</td>\n                  <td>{`${val.SubmitGoal.inputValues.rewardMin} - ${val.SubmitGoal.inputValues.rewardMax}`}</td>\n                  <td className=\"actions_btns\">\n                    {!btn ? (\n                      <button onClick={() => openApprovedForm(val)}>\n                        approved\n                      </button>\n                    ) : null}\n                    {!declineBtn ? (\n                      !undoFunc ? (\n                        <button\n                          className=\"view_icons\"\n                          onClick={() => handleDeclineGoals(val)}\n                        >\n                          decline\n                        </button>\n                      ) : (\n                        <button\n                          className=\"view_icons\"\n                          onClick={\n                            !approvedUndoFunc\n                              ? () => handleUndoDeclineGoals(val)\n                              : () => handleApprovedUndo(val)\n                          }\n                        >\n                          Undo\n                        </button>\n                      )\n                    ) : null}\n                    {/* button for decline if goal is reported  */}\n                    {declineForReported ? (\n                      <button\n                        className=\"view_icons\"\n                        onClick={() => handleDeclineReportGoals(val)}\n                      >\n                        decline\n                      </button>\n                    ) : null}\n                    {undoForReported ? (\n                      <button\n                        className=\"view_icons\"\n                        onClick={() => handleUndoReportedGoals(val)}\n                      >\n                        undo reported\n                      </button>\n                    ) : null}\n                    {undoFake ? (\n                      <button\n                        className=\"view_icons\"\n                        onClick={() => handleUndoFakeGoals(val)}\n                      >\n                        undo fake\n                      </button>\n                    ) : null}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default SubmitGoalsTable;\n"]},"metadata":{},"sourceType":"module"}