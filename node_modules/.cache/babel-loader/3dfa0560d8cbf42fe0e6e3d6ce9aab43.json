{"ast":null,"code":"var _jsxFileName = \"/Users/sidorelakollcaku/Desktop/Project/src/Pages/DashboardScreens/WithOrganizations/OrganizationUsers/UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport firebase from \"../../../../Config/FirebaseConfig\";\nimport { allOrganizationUsers } from \"../../../../GlobalState/CreateSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport dp from \"../../../../Assets/dp.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getOrgUsers = (id, dispatch) => {\n  const db = firebase.database();\n  const dbRef = db.ref(`organizations/${id}/users`);\n  dbRef.on(\"value\", snapshot => {\n    let filterOrgUserssArry = [];\n    snapshot.forEach(data => {\n      const getData = data.val();\n      const getId = data.key;\n      getData.id = getId;\n      filterOrgUserssArry.push(getData);\n    });\n    dispatch(allOrganizationUsers(filterOrgUserssArry));\n  });\n};\n\nconst UserList = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch(); // get filter organization goals from database\n\n  useEffect(() => {\n    getOrgUsers(id, dispatch);\n  }, []);\n  const userSelector = useSelector(state => {\n    return state.goalReducer.orgUsers;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table_md\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"goals_table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Created at\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: userSelector.map(val => {\n            // console.log(val)\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"goals_img\",\n                  src: val.url ? val.url : dp,\n                  alt: \"...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)]\n            }, val.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserList, \"dTrhtyIy/tbO+hV8QvLFwqx80iE=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = UserList;\nexport default UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/sidorelakollcaku/Desktop/Project/src/Pages/DashboardScreens/WithOrganizations/OrganizationUsers/UserList.jsx"],"names":["React","useEffect","useParams","firebase","allOrganizationUsers","useDispatch","useSelector","dp","getOrgUsers","id","dispatch","db","database","dbRef","ref","on","snapshot","filterOrgUserssArry","forEach","data","getData","val","getId","key","push","UserList","userSelector","state","goalReducer","orgUsers","map","url","name","email","number","createdAt"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport firebase from \"../../../../Config/FirebaseConfig\";\nimport { allOrganizationUsers } from \"../../../../GlobalState/CreateSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport dp from \"../../../../Assets/dp.png\";\n\nexport const getOrgUsers = (id, dispatch) => {\n  const db = firebase.database();\n  const dbRef = db.ref(`organizations/${id}/users`);\n  dbRef.on(\"value\", (snapshot) => {\n    let filterOrgUserssArry = [];\n    snapshot.forEach((data) => {\n      const getData = data.val();\n      const getId = data.key;\n      getData.id = getId;\n      filterOrgUserssArry.push(getData);\n    });\n    dispatch(allOrganizationUsers(filterOrgUserssArry));\n  });\n};\n\nconst UserList = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n   \n\n  // get filter organization goals from database\n\n  useEffect(() => {\n    getOrgUsers(id, dispatch);\n  }, []);\n\n  const userSelector = useSelector((state) => {\n    return state.goalReducer.orgUsers;\n  });\n\n\n  return (\n    <div>\n      <div className=\"table_md\">\n        <table className=\"goals_table\">\n          <thead>\n            <tr>\n              <th>Image</th>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Number</th>\n              <th>Created at</th>\n            </tr>\n          </thead>\n          <tbody>\n            {userSelector.map((val) => {\n              // console.log(val)\n              return (\n                <tr key={val.id}>\n                  <td>\n                    <img\n                      className=\"goals_img\"\n                      src={val.url ? val.url : dp}\n                      alt=\"...\"\n                    />\n                  </td>\n                  <td>{val.name}</td>\n                  <td>{val.email}</td>\n                  <td>{val.number}</td>\n                  <td>{val.createdAt}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default UserList;\n"]},"metadata":{},"sourceType":"module"}