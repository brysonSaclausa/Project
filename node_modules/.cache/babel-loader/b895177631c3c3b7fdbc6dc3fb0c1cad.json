{"ast":null,"code":"var _jsxFileName = \"/Users/sidorelakollcaku/Desktop/Project/src/Pages/DashboardScreens/WithOutOrganizations/Categories/CategoryList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport FormDialog from \"../../../../Components/InputPopup\";\nimport firebase from \"../../../../Config/FirebaseConfig\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CategoryList = () => {\n  _s();\n\n  const database = firebase.database();\n  const ref = database.ref(`withoutOrganization/categories`);\n  const pushRef = ref.push();\n  const [open, setOpen] = React.useState(false);\n  let [dbCategory, setDbCategory] = useState([]); // set org input value\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let [category, setCategory] = useState(\"\");\n\n  const handleCategoryInput = event => {\n    setCategory(event.target.value);\n  }; // add organization in firebase database\n\n\n  const addCategory = () => {\n    if (category.length > 3) {\n      pushRef.set({\n        category: category\n      }).then(() => {\n        setCategory(\"\");\n        handleClose();\n      }).catch(err => {\n        console.log(err);\n        setCategory(\"\");\n        handleClose();\n      });\n    } else {\n      alert(\"please enter value or enter max 3 characters\");\n    }\n  };\n\n  useEffect(() => {\n    ref.on(\"value\", snapshot => {\n      let categoryArray = [];\n      snapshot.forEach(data => {\n        let resData = data.val();\n        let dataKey = data.key;\n        resData.id = dataKey;\n        categoryArray.push(resData);\n      });\n      setDbCategory(categoryArray);\n    }); // };\n    // getCategory();\n    // return ()=>{\n    //   getCategory()\n  }, []);\n  const selector = useSelector(state => {\n    return state.goalReducer;\n  });\n\n  const handleDeleteCategory = event => {\n    let {\n      category\n    } = event;\n    const categoryId = event.id;\n    let filterUsedCategory = selector.OrgGoals.filter(val => val.inputValues.category === category);\n\n    if (!filterUsedCategory.length) {\n      database.ref(`withoutOrganization/categories/${categoryId}`).remove().then(() => {\n        console.log(\"deleted\");\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      alert(\"this cateogry is used in goals\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c_list_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cList_md\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cList_sd\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categoryList\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category_head\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tb_tabs_headContent\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Category list\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addCt_btn\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleClickOpen,\n                className: \"orngClr \",\n                children: \"Add Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormDialog, {\n                handleAddFunction: addCategory,\n                handleInputvalue: handleCategoryInput,\n                inputValue: category,\n                open: open // handleClickOpen={handleClickOpen}\n                ,\n                handleClose: handleClose,\n                btnValue: \"Add Category\",\n                labelValue: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"cList\",\n            children: dbCategory && dbCategory.map(val => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\" \", val.category]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn_dlt\",\n                onClick: () => handleDeleteCategory(val),\n                children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)]\n            }, val.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CategoryList, \"OVA5aNNrw5TuvISukIgqMf4Gs1I=\", false, function () {\n  return [useSelector];\n});\n\n_c = CategoryList;\nexport default CategoryList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryList\");","map":{"version":3,"sources":["/Users/sidorelakollcaku/Desktop/Project/src/Pages/DashboardScreens/WithOutOrganizations/Categories/CategoryList.jsx"],"names":["React","useEffect","useState","FormDialog","firebase","DeleteForeverIcon","useSelector","Button","CategoryList","database","ref","pushRef","push","open","setOpen","dbCategory","setDbCategory","handleClickOpen","handleClose","category","setCategory","handleCategoryInput","event","target","value","addCategory","length","set","then","catch","err","console","log","alert","on","snapshot","categoryArray","forEach","data","resData","val","dataKey","key","id","selector","state","goalReducer","handleDeleteCategory","categoryId","filterUsedCategory","OrgGoals","filter","inputValues","remove","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport FormDialog from \"../../../../Components/InputPopup\";\nimport firebase from \"../../../../Config/FirebaseConfig\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { useSelector } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\n\nconst CategoryList = () => {\n  const database = firebase.database();\n  const ref = database.ref(`withoutOrganization/categories`);\n  const pushRef = ref.push();\n  const [open, setOpen] = React.useState(false);\n  let [dbCategory, setDbCategory] = useState([]);\n  // set org input value\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let [category, setCategory] = useState(\"\");\n  const handleCategoryInput = (event) => {\n    setCategory(event.target.value);\n  };\n\n  // add organization in firebase database\n  const addCategory = () => {\n    if (category.length > 3) {\n      pushRef\n        .set({ category: category })\n        .then(() => {\n          setCategory(\"\");\n          handleClose();\n        })\n        .catch((err) => {\n          console.log(err);\n          setCategory(\"\");\n          handleClose();\n        });\n    } else {\n      alert(\"please enter value or enter max 3 characters\");\n    }\n  };\n\n  useEffect(() => {\n    ref.on(\"value\", (snapshot) => {\n      let categoryArray = [];\n      snapshot.forEach((data) => {\n        let resData = data.val();\n        let dataKey = data.key;\n        resData.id = dataKey;\n        categoryArray.push(resData);\n      });\n      setDbCategory(categoryArray);\n    });\n    // };\n    // getCategory();\n    // return ()=>{\n    //   getCategory()\n  }, []);\n\n  const selector = useSelector((state) => {\n    return state.goalReducer;\n  });\n\n  const handleDeleteCategory = (event) => {\n    let { category } = event;\n    const categoryId = event.id;\n    let filterUsedCategory = selector.OrgGoals.filter(\n      (val) => val.inputValues.category === category\n    );\n    if (!filterUsedCategory.length) {\n      database\n        .ref(`withoutOrganization/categories/${categoryId}`)\n        .remove()\n        .then(() => {\n          console.log(\"deleted\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      alert(\"this cateogry is used in goals\");\n    }\n  };\n\n  return (\n    <div className=\"c_list_container\">\n      <div className=\"cList_md\">\n        <div className=\"cList_sd\">\n          <div className=\"categoryList\">\n            <div className=\"category_head\">\n              <div className=\"tb_tabs_headContent\">\n                <p>Category list</p>\n              </div>\n              <div className=\"addCt_btn\">\n                <Button onClick={handleClickOpen} className=\"orngClr \">\n                  Add Category\n                </Button>\n                <FormDialog\n                  handleAddFunction={addCategory}\n                  handleInputvalue={handleCategoryInput}\n                  inputValue={category}\n                  open={open}\n                  // handleClickOpen={handleClickOpen}\n                  handleClose={handleClose}\n                  btnValue=\"Add Category\"\n                  labelValue=\"Category\"\n                />\n              </div>\n            </div>\n            <ul className=\"cList\">\n              {dbCategory &&\n                dbCategory.map((val) => (\n                  <li key={val.id}>\n                    <p> {val.category}</p>\n                    <button\n                      className=\"btn_dlt\"\n                      onClick={() => handleDeleteCategory(val)}\n                    >\n                      <DeleteForeverIcon />\n                    </button>\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryList;\n"]},"metadata":{},"sourceType":"module"}