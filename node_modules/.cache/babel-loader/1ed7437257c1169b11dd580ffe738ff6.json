{"ast":null,"code":"var _jsxFileName = \"/Users/sidorelakollcaku/Desktop/PROJECT1/src/Pages/UserSide/Feed/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport MenuAppBar from \"../../../Layout/Navbar\";\nimport firebase from \"../../../Config/FirebaseConfig\"; // import SmsIcon from \"@material-ui/icons/Sms\";\n\nimport \"./feed.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport UsersGoals from \"./UsersGoals\";\nimport { getFeedGoals, setPostsLike, setPostComments } from \"../../../GlobalState/UserSideSlice\";\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined'; // import LoadingState from \"../../../Components/Loading\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Feed = () => {\n  _s();\n\n  const db = firebase.database();\n  const dispatch = useDispatch();\n  const userDetail = useSelector(state => {\n    return state.goalReducer.currentUser;\n  });\n  const submitGoal = useSelector(state => {\n    return state.userReducer;\n  });\n\n  const getAllUsersGoals = parameter => {\n    db.ref(parameter).on(\"value\", snapshot => {\n      var goalsArray = [];\n      snapshot.forEach(goals => {\n        let getGoals = goals.val();\n        let getGoalsId = goals.key;\n        getGoals.orgMainId = getGoalsId; // console.log(getGoals)\n\n        if (getGoals.submit && !getGoals.acceptReport) {\n          goalsArray.push(getGoals); // console.log('in condition',getGoals)\n        }\n      });\n      dispatch(getFeedGoals(goalsArray));\n    });\n  }; // get post likes data\n\n\n  const getGoalsLikes = parameter => {\n    db.ref(parameter).on(\"value\", snapshot => {\n      var likesArray = [];\n      snapshot.forEach(goals => {\n        goals.forEach(like => {\n          let getLikes = like.val();\n          let getLikesId = like.key;\n          getLikes.likeId = getLikesId;\n          likesArray.push(getLikes);\n        });\n      });\n      dispatch(setPostsLike(likesArray));\n    });\n  }; // get post Comment data\n\n\n  const getGoalsComments = parameter => {\n    db.ref(parameter).orderByChild('timestamp').on(\"value\", snapshot => {\n      var commentsArray = [];\n      snapshot.forEach(goals => {\n        goals.forEach(like => {\n          let getComments = like.val();\n          let getCommentId = like.key;\n          getComments.commentId = getCommentId;\n          commentsArray.push(getComments);\n        });\n      });\n      dispatch(setPostComments(commentsArray));\n    });\n  };\n\n  useEffect(() => {\n    // condition for  if user enrolled in any organization\n    if (userDetail.orgId !== \"\") {\n      getAllUsersGoals(`organizations/${userDetail.orgId}/submitGoals`);\n      getGoalsLikes(`organizations/${userDetail.orgId}/likes`);\n      getGoalsComments(`organizations/${userDetail.orgId}/comments`); // }\n    } else {\n      getAllUsersGoals(`withoutOrganization/submitGoals`);\n      getGoalsLikes(`withoutOrganization/likes`);\n      getGoalsComments(`withoutOrganization/comments`);\n    }\n  }, []); // const [loading, setLoading] = React.useState(true)\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setLoading(false)\n  //   }, 1000)\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedContainer\",\n    children: [/*#__PURE__*/_jsxDEV(MenuAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobViewFeedHead\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobViewContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"All of your personalised postsin all place\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextsmsOutlinedIcon, {\n        className: \"feedSmsIcon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedMain\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedContent\",\n        children: /*#__PURE__*/_jsxDEV(UsersGoals, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Feed, \"yyx1kdaAbRwKRH4Zmu5r5X/S3h8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/sidorelakollcaku/Desktop/PROJECT1/src/Pages/UserSide/Feed/index.jsx"],"names":["React","useEffect","MenuAppBar","firebase","useSelector","useDispatch","UsersGoals","getFeedGoals","setPostsLike","setPostComments","TextsmsOutlinedIcon","Feed","db","database","dispatch","userDetail","state","goalReducer","currentUser","submitGoal","userReducer","getAllUsersGoals","parameter","ref","on","snapshot","goalsArray","forEach","goals","getGoals","val","getGoalsId","key","orgMainId","submit","acceptReport","push","getGoalsLikes","likesArray","like","getLikes","getLikesId","likeId","getGoalsComments","orderByChild","commentsArray","getComments","getCommentId","commentId","orgId"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport MenuAppBar from \"../../../Layout/Navbar\";\nimport firebase from \"../../../Config/FirebaseConfig\";\n// import SmsIcon from \"@material-ui/icons/Sms\";\nimport \"./feed.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport UsersGoals from \"./UsersGoals\";\nimport { getFeedGoals, setPostsLike ,setPostComments} from \"../../../GlobalState/UserSideSlice\";\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined';\n// import LoadingState from \"../../../Components/Loading\";\n\n\nconst Feed = () => {\n  const db = firebase.database();\n  const dispatch = useDispatch();\n  const userDetail = useSelector((state) => {\n    return state.goalReducer.currentUser;\n  });\n  const submitGoal = useSelector((state) => {\n    return state.userReducer;\n  });\n\n  const getAllUsersGoals = (parameter) => {\n    db.ref(parameter).on(\"value\", (snapshot) => {\n      var goalsArray = [];\n      snapshot.forEach((goals) => {\n        let getGoals = goals.val();\n        let getGoalsId = goals.key;\n        getGoals.orgMainId = getGoalsId;\n        // console.log(getGoals)\n        if (getGoals.submit && !getGoals.acceptReport ) {\n          goalsArray.push(getGoals);\n        // console.log('in condition',getGoals)\n\n        }\n      });\n      dispatch(getFeedGoals(goalsArray));\n    });\n  };\n  // get post likes data\n  const getGoalsLikes = (parameter) => {\n    db.ref(parameter).on(\"value\", (snapshot) => {\n      var likesArray = [];\n      snapshot.forEach((goals) => {\n        goals.forEach((like) => {\n          let getLikes = like.val();\n          let getLikesId = like.key;\n          getLikes.likeId = getLikesId;\n          likesArray.push(getLikes);\n        });\n      });\n      dispatch(setPostsLike(likesArray));\n    });\n  };\n\n    // get post Comment data\n    const getGoalsComments = (parameter) => {\n      db.ref(parameter).orderByChild('timestamp').on(\"value\", (snapshot) => {\n        var commentsArray = [];\n        snapshot.forEach((goals) => {\n          goals.forEach((like) => {\n            let getComments = like.val();\n            let getCommentId = like.key;\n            getComments.commentId = getCommentId;\n            commentsArray.push(getComments);\n          });\n        });\n        dispatch(setPostComments(commentsArray));\n      });\n    };\n  \n  useEffect(() => {\n    // condition for  if user enrolled in any organization\n    if (userDetail.orgId !== \"\") {\n      getAllUsersGoals(`organizations/${userDetail.orgId}/submitGoals`);\n      getGoalsLikes(`organizations/${userDetail.orgId}/likes`);\n      getGoalsComments(`organizations/${userDetail.orgId}/comments`);\n      // }\n    } else {\n      getAllUsersGoals(`withoutOrganization/submitGoals`);\n      getGoalsLikes(`withoutOrganization/likes`);\n      getGoalsComments(`withoutOrganization/comments`);\n    }\n  }, []);\n\n  // const [loading, setLoading] = React.useState(true)\n\n  // useEffect(() => {\n  //   setTimeout(() => {\n  //     setLoading(false)\n  //   }, 1000)\n  // }, [])\n\n  return (\n    <div className=\"feedContainer\">\n      <MenuAppBar />\n      <div className=\"mobViewFeedHead\">\n        <div className=\"mobViewContent\">\n          <h3>My feed</h3>\n          <p>All of your personalised postsin all place</p>\n        </div>\n        <TextsmsOutlinedIcon className=\"feedSmsIcon\" />\n      </div>\n      <div className=\"feedMain\">\n        {/* {!loading? */}\n        <div className=\"feedContent\">\n          <UsersGoals />\n        </div>\n       {/* : <LoadingState /> } */}\n      </div>\n    </div>\n  );\n};\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}