{"ast":null,"code":"var _jsxFileName = \"/Users/sidorelakollcaku/Desktop/PROJECT1/src/Pages/UserSide/VerificationGoal/DetailPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport MenuAppBar from '../../../Layout/Navbar';\nimport firebase from '../../../Config/FirebaseConfig';\nimport AlertDialog from '../../../Components/AlertPopup';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport FormDialog from '../../../Components/InputPopup';\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StartGoalDetailPage = () => {\n  _s();\n\n  const db = firebase.database();\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const [goalDetail, setGoalDetail] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  let [loader, setLoader] = useState(false);\n  const selector = useSelector(state => {\n    return state;\n  });\n  const {\n    userReducer,\n    goalReducer\n  } = selector;\n  useEffect(() => {\n    const filterSelectedGoal = selector.userReducer.selectedGoals.filter(val => val.id === id);\n    setGoalDetail(filterSelectedGoal);\n    setLoader(true);\n    return () => {\n      setGoalDetail([]);\n    };\n  }, []); // countdown timer working\n\n  const calculateTime = () => {\n    // if (goalDetail) {\n    const filterSelectedGoal = selector.userReducer.selectedGoals.filter(val => val.id === id);\n\n    if (filterSelectedGoal.length) {\n      const date = new Date(filterSelectedGoal[0].GoalStartDate);\n      var myFutureDate = new Date(date);\n      let currentDate = new Date();\n      myFutureDate.setDate(myFutureDate.getDate() + Number(filterSelectedGoal[0].inputValues.numberOfDays));\n      const difference = myFutureDate - currentDate; // setEndDate(myFutureDate)\n      // console.log(myFutureDate)\n\n      let timeLeft = {};\n\n      if (difference > 0) {\n        timeLeft = {\n          days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n          hours: Math.floor(difference / (1000 * 60 * 60) % 24),\n          minutes: Math.floor(difference / 1000 / 60 % 60),\n          seconds: Math.floor(difference / 1000 % 60)\n        };\n      }\n\n      return timeLeft; // }\n    }\n  };\n\n  calculateTime();\n  const [timeLeft, setTimeLeft] = useState(calculateTime());\n  useEffect(() => {\n    if (loader) {\n      setLoader(false);\n    }\n\n    if (timeLeft) {\n      if (Object.keys(timeLeft).length !== 0) {\n        const timer = setTimeout(() => {\n          setTimeLeft(calculateTime());\n        }, 1000); // Clear timeout if the component is unmounted\n\n        return () => clearTimeout(timer);\n      }\n    }\n  }); // submit goal working\n\n  let [open, setOpen] = useState(false);\n  let [goalId, setGoalId] = useState('');\n  let [myGoalId, setMyGoalId] = useState('');\n  const [imgUrl, setImgurl] = useState('');\n  const [imgName, setImgName] = useState('');\n  const [local, setLocal] = useState('');\n  let [loading, setLoading] = useState(false);\n  let [submitGoalKey, setSubmitGoalKey] = useState('');\n\n  const handleOpenForm = event => {\n    let filterFormSelectedGoal = selector.userReducer.selectedGoals.filter(val => val.id === event);\n    setMyGoalId(filterFormSelectedGoal[0].myGoalId);\n    setGoalId(event);\n    setOpen(true);\n    db.ref(`organizations/${goalReducer.currentUser.orgId}/submitGoals`).on('value', snap => {\n      snap.forEach(sGoal => {\n        if (sGoal.val().SubmitGoal.id === event) {\n          const getSelecGoalKey = sGoal.key;\n          setSubmitGoalKey(getSelecGoalKey);\n        } // console.log(sGoal.val(),event);\n\n      });\n    });\n    console.log('unreport');\n  };\n\n  const handleCloseSubmitForm = () => {\n    setOpen(false);\n  };\n\n  const handleSelectImg = event => {\n    const url = URL.createObjectURL(event.target.files[0]);\n    const goalImgName = event.target.files[0].name;\n    setImgurl(url);\n    setImgName(goalImgName);\n    setLocal(event.target.files[0]);\n  }; // firebase storage ref\n\n\n  const storage = firebase.storage();\n\n  let createStorageRef = () => storage.ref(`SubmitImages/${imgName}`).put(local);\n\n  let downLoad = () => storage.ref(`SubmitImages/${imgName}`).getDownloadURL();\n\n  const handleSubmitGoal = () => {\n    let filterFormSelectedGoal = selector.userReducer.selectedGoals.filter(val => val.id === goalId);\n    setLoading(true);\n    let myGoalObject = {\n      submit: true,\n      approved: false,\n      decline: false,\n      submitDate: new Date().toLocaleString(),\n      hasStarted: false,\n      isReport: false,\n      acceptReport: false,\n      pending: false\n    }; // console.log(filterFormSelectedGoal[0]);\n\n    if (!filterFormSelectedGoal[0].submit) {\n      if (local) {\n        createStorageRef().then(() => {\n          // download img from storage\n          downLoad().then(url => {\n            // then set submit goals in database\n            if (goalReducer.currentUser.orgId !== '') {\n              // user side update mygoals\n              db.ref(`organizations/${goalReducer.currentUser.orgId}/users/${userReducer.currentUserOrgId}/myGoals/${myGoalId}`).update(myGoalObject); // set insise organization\n\n              if (!filterFormSelectedGoal[0].acceptReport) {\n                db.ref(`organizations/${goalReducer.currentUser.orgId}/submitGoals`).push().set({\n                  SubmitGoal: filterFormSelectedGoal[0],\n                  userName: goalReducer.currentUser.name,\n                  userIdMain: goalReducer.currentUser.id,\n                  uploadImgUlr: url,\n                  approved: false,\n                  decline: false,\n                  submit: true,\n                  hasStarted: false,\n                  submitDate: new Date().toLocaleString(),\n                  orgUserId: userReducer.currentUserOrgId,\n                  isReport: false,\n                  acceptReport: false,\n                  pending: false\n                }).then(() => {\n                  setImgurl('');\n                  setImgName('');\n                  setLocal('');\n                  setShowPopup(true);\n                  setLoading(false);\n                  console.log('submitted');\n                  handleClose();\n                }).catch(err => {\n                  console.log(err);\n                  setLoading(false);\n                  alert('connectionn failed try again');\n                });\n              } else {\n                db.ref(`organizations/${goalReducer.currentUser.orgId}/submitGoals/${submitGoalKey}`).update({\n                  uploadImgUlr: url,\n                  approved: false,\n                  decline: false,\n                  submit: true,\n                  hasStarted: false,\n                  submitDate: new Date().toLocaleString(),\n                  isReport: false,\n                  acceptReport: false,\n                  pending: false\n                }).then(() => {\n                  setImgurl('');\n                  setImgName('');\n                  setLocal('');\n                  setShowPopup(true);\n                  setLoading(false);\n                  console.log('submitted');\n                  handleClose();\n                }).catch(err => {\n                  console.log(err);\n                  setLoading(false);\n                  alert('connectionn failed try again');\n                });\n              }\n            } //    set submit goal if user not enrolled in any org\n            else {\n              db.ref(`withoutOrganization/users/${userReducer.currentUserOrgId}/myGoals/${myGoalId}`).update(myGoalObject);\n\n              if (!filterFormSelectedGoal[0].acceptReport) {\n                console.log('submitted');\n                db.ref(`withoutOrganization/submitGoals`).push().set({\n                  SubmitGoal: filterFormSelectedGoal[0],\n                  userName: goalReducer.currentUser.name,\n                  userIdMain: goalReducer.currentUser.id,\n                  uploadImgUlr: url,\n                  approved: false,\n                  decline: false,\n                  orgUserId: userReducer.currentUserOrgId,\n                  hasStarted: false,\n                  submit: true,\n                  submitDate: new Date().toLocaleString(),\n                  isReport: false,\n                  acceptReport: false,\n                  pending: false\n                }).then(() => {\n                  setImgurl('');\n                  setImgName('');\n                  setLocal('');\n                  setShowPopup(true);\n                  setLoading(false);\n                  handleClose();\n                }).catch(err => {\n                  console.log(err);\n                  alert('connection failed try again');\n                  setLoading(false);\n                });\n              } else {\n                db.ref(`withoutOrganization/submitGoals/${submitGoalKey}`).update({\n                  uploadImgUlr: url,\n                  approved: false,\n                  decline: false,\n                  submit: true,\n                  hasStarted: false,\n                  submitDate: new Date().toLocaleString(),\n                  isReport: false,\n                  acceptReport: false,\n                  pending: false\n                }).then(() => {\n                  setImgurl('');\n                  setImgName('');\n                  setLocal('');\n                  setShowPopup(true);\n                  setLoading(false);\n                  handleClose();\n                }).catch(err => {\n                  console.log(err);\n                  alert('connection failed try again');\n                  setLoading(false);\n                });\n              }\n            }\n          }) // handle error of download img\n          .catch(err => {\n            console.log(err);\n          });\n        }) // handle error of upload img\n        .catch(err => {\n          console.log(err);\n        });\n      } else {\n        alert('Please select image');\n      }\n    } else {\n      alert('already submitted');\n      setLoading(false);\n    }\n  }; // retry goal\n\n\n  const handleRetryGoal = event => {\n    // console.log(event,selector.userReducer)\n    // get submit goal key for retry\n    if (selector.goalReducer.currentUser.orgId !== '') {\n      db.ref(`organizations/${selector.goalReducer.currentUser.orgId}/users/${selector.userReducer.currentUserOrgId}/myGoals/${event.myGoalId}`).update({\n        decline: false,\n        submit: false,\n        pending: false\n      });\n      db.ref(`organizations/${selector.goalReducer.currentUser.orgId}/submitGoals`).on('value', snapshot => {\n        snapshot.forEach(val => {\n          if (val.val().SubmitGoal.myGoalId === event.myGoalId) {\n            // console.log(val.key)\n            db.ref(`organizations/${selector.goalReducer.currentUser.orgId}/submitGoals/${val.key}`).update({\n              decline: false,\n              submit: false,\n              pending: false\n            }).then(() => {\n              console.log('retry');\n              history.push('/goals-status');\n            }).catch(err => {\n              console.log(err);\n              alert('connection failed please try again');\n            });\n          }\n        });\n      });\n    } //    set goal if user not enrolled in any org\n    else {\n      db.ref(`withoutOrganization/users/${selector.userReducer.currentUserOrgId}/myGoals/${event.myGoalId}`).update({\n        decline: false,\n        submit: false,\n        pending: false\n      });\n      db.ref(`withoutOrganization/submitGoals`).on('value', snapshot => {\n        snapshot.forEach(val => {\n          if (val.val().SubmitGoal.myGoalId === event.myGoalId) {\n            // console.log(val.key)\n            db.ref(`withoutOrganization/submitGoals/${val.key}`).update({\n              decline: false,\n              submit: false,\n              pending: false\n            }).then(() => {\n              console.log('retry');\n              history.push('/goals-status');\n            }).catch(err => {\n              console.log(err);\n              alert('connection failed please try again');\n            });\n          }\n        });\n      });\n    }\n  }; // withdra pending goals\n\n\n  const handleWithDraw = event => {\n    // if (!filterFormSelectedGoal.length) {\n    let balance = '';\n    db.ref(`organizations/${selector.goalReducer.currentUser.orgId}/users/${selector.userReducer.currentUserOrgId}`).on('value', snapshot => {\n      let userData = snapshot.val();\n      let userBalancedb = userData.balance;\n      balance = userBalancedb;\n    });\n\n    if (selector.goalReducer.currentUser.orgId !== '') {\n      db.ref(`organizations/${selector.goalReducer.currentUser.orgId}/users/${selector.userReducer.currentUserOrgId}`).update({\n        balance: balance + Number(event.reward) + event.userInvestment\n      });\n      db.ref(`organizations/${selector.goalReducer.currentUser.orgId}/users/${selector.userReducer.currentUserOrgId}/myGoals/${event.myGoalId}`).update({\n        pending: false\n      });\n      db.ref(`organizations/${selector.goalReducer.currentUser.orgId}/submitGoals`).on('value', snapshot => {\n        snapshot.forEach(val => {\n          if (val.val().SubmitGoal.myGoalId === event.myGoalId) {\n            // console.log(val.key)\n            db.ref(`organizations/${selector.goalReducer.currentUser.orgId}/submitGoals/${val.key}`).update({\n              pending: false\n            }).then(() => {\n              console.log('retry');\n              history.push('/goals-status');\n            }).catch(err => {\n              console.log(err);\n              alert('connection failed please try again');\n            });\n          }\n        });\n      });\n    } //    set goal if user not enrolled in any org\n    else {\n      db.ref(`organizations/${selector.goalReducer.currentUser.orgId}/users/${selector.userReducer.currentUserOrgId}`).update({\n        balance: Number(balance) + Number(event.reward) + event.userInvestment\n      });\n      db.ref(`withoutOrganization/users/${selector.userReducer.currentUserOrgId}/myGoals/${event.myGoalId}`).update({\n        pending: true\n      });\n      db.ref(`withoutOrganization/submitGoals`).on('value', snapshot => {\n        snapshot.forEach(val => {\n          if (val.val().SubmitGoal.myGoalId === event.myGoalId) {\n            // console.log(val.key)\n            db.ref(`withoutOrganization/submitGoals/${val.key}`).update({\n              pending: false\n            }).then(() => {\n              console.log('retry');\n              history.push('/goals-status');\n            }).catch(err => {\n              console.log(err);\n              alert('connection failed please try again');\n            });\n          }\n        });\n      });\n    }\n  }; // // retake pic working\n  // let [retakeForm, setRetakeForm] = useState(false)\n  // // let [submitGoalKey, setSubmitGoalKey] = useState('')\n  // const handleOpenRetakeForm = (event) => {\n  //   let filterFormSelectedGoal = selector.userReducer.selectedGoals.filter(\n  //     (val) => val.id === event,\n  //   )\n  //   setMyGoalId(filterFormSelectedGoal[0].myGoalId)\n  //   setGoalId(event)\n  //   setRetakeForm(true)\n  //   // get submit goal key to update submit goal\n  //   db.ref(`organizations/${goalReducer.currentUser.orgId}/submitGoals`).on(\n  //     'value',\n  //     (snap) => {\n  //       snap.forEach((sGoal) => {\n  //         if (sGoal.val().SubmitGoal.id === event) {\n  //           const getSelecGoalKey = sGoal.key\n  //           setSubmitGoalKey(getSelecGoalKey)\n  //         }\n  //         // console.log(sGoal.val(),event);\n  //       })\n  //     },\n  //   )\n  // }\n  // const handleReSubmitGoal = () => {\n  //   // console.log('resubmit',submitGoalKey)\n  //   let filterFormSelectedGoal = selector.userReducer.selectedGoals.filter(\n  //     (val) => val.id === goalId,\n  //   )\n  //   setLoading(true)\n  //   let myGoalObject = {\n  //     submit: true,\n  //     approved: false,\n  //     decline: false,\n  //     submitDate: new Date().toLocaleString(),\n  //     hasStarted: false,\n  //     isReport: false,\n  //     acceptReport: false,\n  //     pending: false,\n  //   }\n  //   // if (filterFormSelectedGoal[0].acceptReport) {\n  //   //   // console.log('true',filterFormSelectedGoal,submitGoalKey)\n  //   //   if (local) {\n  //   //     createStorageRef()\n  //   //       .then(() => {\n  //   //         // download img from storage\n  //   //         downLoad()\n  //   //           .then((url) => {\n  //   //             // then set submit goals in database\n  //   //             if (goalReducer.currentUser.orgId !== \"\") {\n  //   //               // user side update mygoals\n  //   //               db.ref(\n  //   //                 `organizations/${goalReducer.currentUser.orgId}/users/${userReducer.currentUserOrgId}/myGoals/${myGoalId}`\n  //   //               ).update(myGoalObject);\n  //   //               db.ref(\n  //   //                 `organizations/${goalReducer.currentUser.orgId}/submitGoals/${submitGoalKey}`\n  //   //               )\n  //   //                 .update({\n  //   //                   uploadImgUlr: url,\n  //   //                   approved: false,\n  //   //                   decline: false,\n  //   //                   submit: true,\n  //   //                   hasStarted: false,\n  //   //                   submitDate: new Date().toLocaleString(),\n  //   //                   isReport: false,\n  //   //                   acceptReport: false,\n  //   //                   pending: false,\n  //   //                 })\n  //   //                 .then(() => {\n  //   //                   setImgurl(\"\");\n  //   //                   setImgName(\"\");\n  //   //                   setLocal(\"\");\n  //   //                   setShowPopup(true);\n  //   //                   setLoading(false);\n  //   //                   console.log(\"submitted\");\n  //   //                   handleClose();\n  //   //                 })\n  //   //                 .catch((err) => {\n  //   //                   console.log(err);\n  //   //                   setLoading(false);\n  //   //                   alert(\"connectionn failed try again\");\n  //   //                 });\n  //   //             }\n  //   //             // set insise organization\n  //   //             //    set submit goal if user not enrolled in any org\n  //   //             else {\n  //   //               db.ref(\n  //   //                 `withoutOrganization/users/${userReducer.currentUserOrgId}/myGoals/${myGoalId}`\n  //   //               )\n  //   //                 .update(myGoalObject)\n  //   //                 .then(() => {\n  //   //                   setImgurl(\"\");\n  //   //                   setImgName(\"\");\n  //   //                   setLocal(\"\");\n  //   //                   setShowPopup(true);\n  //   //                   setLoading(false);\n  //   //                   console.log(\"submitted\");\n  //   //                   db.ref(`withoutOrganization/submitGoals/${submitGoalKey}`)\n  //   //                     .push()\n  //   //                     .update({\n  //   //                       uploadImgUlr: url,\n  //   //                       approved: false,\n  //   //                       decline: false,\n  //   //                       hasStarted: false,\n  //   //                       submit: true,\n  //   //                       submitDate: new Date().toLocaleString(),\n  //   //                       isReport: false,\n  //   //                       acceptReport: false,\n  //   //                       pending: false,\n  //   //                     });\n  //   //                   handleClose();\n  //   //                 })\n  //   //                 .catch((err) => {\n  //   //                   console.log(err);\n  //   //                   alert(\"connection failed try again\");\n  //   //                   setLoading(false);\n  //   //                 });\n  //   //             }\n  //   //           })\n  //   //           // handle error of download img\n  //   //           .catch((err) => {\n  //   //             console.log(err);\n  //   //           });\n  //   //       })\n  //   //       // handle error of upload img\n  //   //       .catch((err) => {\n  //   //         console.log(err);\n  //   //       });\n  //   //   } else {\n  //   //     alert(\"Please select image\");\n  //   //   }\n  //   // }\n  // }\n  //   alert popup close function\n\n\n  const handleClose = () => {\n    setShowPopup(false);\n    history.push('/selec-goals');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userGoalDetail_container\",\n    children: [showPopup ? /*#__PURE__*/_jsxDEV(AlertDialog, {\n      handleClose: handleClose,\n      open: showPopup,\n      value: \"Good luck on your goal\",\n      btnValue: \"Back to My Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 9\n    }, this) : null, open ? /*#__PURE__*/_jsxDEV(FormDialog, {\n      fileInput: true,\n      open: open,\n      handleClose: handleCloseSubmitForm,\n      btnValue: \"Submit Goal\",\n      handleAddFunction: handleSubmitGoal,\n      handleInputvalue: handleSelectImg,\n      imgUrl: imgUrl,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(MenuAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userGoalDetail_md\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobViewHead mobViewFlat\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobViewHeadContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mobHeadBack\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => history.goBack(),\n              className: \"mobHeadBack_link\",\n              children: /*#__PURE__*/_jsxDEV(ArrowBackIosIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"TRYVE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headChatIcon\",\n            children: /*#__PURE__*/_jsxDEV(TextsmsOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userGoal_detail_d\",\n        children: goalDetail.length ? goalDetail.map(val => {\n          const endDate = new Date(val.GoalStartDate);\n          var myEndDate = new Date(endDate);\n          myEndDate.setDate(myEndDate.getDate() + Number(val.inputValues.numberOfDays)).toLocaleString();\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userGoalDetail_content2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detailVerifyLeftContent\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => history.goBack(),\n                className: \"Verifyback_link\",\n                children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: val.url,\n                alt: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 23\n              }, this), val.decline || val.pending ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"start_goal_btn\",\n                onClick: // !val.acceptReport\n                // ?\n                () => handleOpenForm(val.id) // : () => handleOpenRetakeForm(val.id)\n                ,\n                disabled: val.submit,\n                children: val.submit && !val.approved && !val.decline ? ' Submitted' : val.submit && val.approved && val.percentage === '100' && !val.pending || val.submit && val.approved && val.percentage !== '100' && !val.pending ? ' Approved' : val.submit && val.approved && val.percentage !== '100' && val.pending ? ' Pending ' : val.decline === true && val.submit && !val.approved ? ' decline ' : ' Take verification photo '\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 25\n              }, this), val.decline ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"start_goal_btn\",\n                onClick: () => handleRetryGoal(val),\n                children: \"Retry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 711,\n                columnNumber: 25\n              }, this) : null, val.pending ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"withdrawBtns\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"start_goal_btn\",\n                  onClick: () => handleWithDraw(val),\n                  children: \"Withdraw\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"start_goal_btn\",\n                  onClick: () => handleRetryGoal(val),\n                  children: \"Retry\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 25\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detailRight_contentVerify\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail_list\",\n                children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"detailGoal_ul\",\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"borderBtm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"db_bold_head\",\n                      children: \"Goal : \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detail_db\",\n                      children: val.inputValues.eventName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 740,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"moreInfoGoal\",\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      className: \"goals\",\n                      children: val.approved && !val.pending && val.submit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Success : \", val.percentage, \"%\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 748,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Reward : \", val.reward]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 749,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Start : \", val.GoalStartDate.slice(0, 10), ' ']\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 753,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"End :\", ' ', myEndDate.toLocaleString().slice(0, 10)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 756,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 745,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Category : \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 764,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"detail_db\",\n                        children: val.inputValues.category\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 765,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 763,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"Difficulty : \"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 770,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"detail_db\",\n                        children: val.inputValues.dificulty\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 771,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 769,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 744,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"db_bold_head2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"db_bold_head\",\n                      children: \"Description : \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 777,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"detail_db\",\n                      children: val.inputValues.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 778,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 776,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 25\n                }, this), !val.submit ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"timeLeftCounter borderBtm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Time Left:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 785,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: Object.keys(timeLeft).length !== 0 ? `${timeLeft.days} days ${timeLeft.hours} hours ` : 'time end'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 786,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: val.submit && !val.approved && !val.decline ? ' Submitted' : val.submit && val.approved && val.percentage === '100' && !val.pending || val.submit && val.approved && val.percentage !== '100' && !val.pending ? ' Approved' : val.submit && val.approved && val.percentage !== '100' && val.pending ? ' Pending ' : val.decline === true && val.submit && !val.approved ? ' decline ' : ' NeedSubmmision '\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"goalMob_btn\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"start_goal_btn\",\n                  onClick: () => handleOpenForm(val.id),\n                  disabled: val.submit,\n                  children: val.submit && !val.approved && !val.decline ? ' Submitted' : val.submit && val.approved && val.percentage === '100' && !val.pending || val.submit && val.approved && val.percentage !== '100' && !val.pending ? ' Approved' : val.submit && val.approved && val.percentage !== '100' && val.pending ? ' Pending ' : val.decline === true && val.submit && !val.approved ? ' decline ' : ' Take verification photo '\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 819,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 21\n            }, this)]\n          }, val.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 19\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => history.goBack(),\n          className: \"goBack\",\n          children: [' ', \"Go back and select product...\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 617,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartGoalDetailPage, \"c1Dq3D1MF9aCCu7/wMI6sKENAow=\", false, function () {\n  return [useParams, useHistory, useSelector];\n});\n\n_c = StartGoalDetailPage;\nexport default StartGoalDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartGoalDetailPage\");","map":{"version":3,"sources":["/Users/sidorelakollcaku/Desktop/PROJECT1/src/Pages/UserSide/VerificationGoal/DetailPage.jsx"],"names":["React","useHistory","useParams","useSelector","useEffect","useState","MenuAppBar","firebase","AlertDialog","ArrowBackIosIcon","FormDialog","TextsmsOutlinedIcon","ArrowBackIcon","StartGoalDetailPage","db","database","id","history","goalDetail","setGoalDetail","showPopup","setShowPopup","loader","setLoader","selector","state","userReducer","goalReducer","filterSelectedGoal","selectedGoals","filter","val","calculateTime","length","date","Date","GoalStartDate","myFutureDate","currentDate","setDate","getDate","Number","inputValues","numberOfDays","difference","timeLeft","days","Math","floor","hours","minutes","seconds","setTimeLeft","Object","keys","timer","setTimeout","clearTimeout","open","setOpen","goalId","setGoalId","myGoalId","setMyGoalId","imgUrl","setImgurl","imgName","setImgName","local","setLocal","loading","setLoading","submitGoalKey","setSubmitGoalKey","handleOpenForm","event","filterFormSelectedGoal","ref","currentUser","orgId","on","snap","forEach","sGoal","SubmitGoal","getSelecGoalKey","key","console","log","handleCloseSubmitForm","handleSelectImg","url","URL","createObjectURL","target","files","goalImgName","name","storage","createStorageRef","put","downLoad","getDownloadURL","handleSubmitGoal","myGoalObject","submit","approved","decline","submitDate","toLocaleString","hasStarted","isReport","acceptReport","pending","then","currentUserOrgId","update","push","set","userName","userIdMain","uploadImgUlr","orgUserId","handleClose","catch","err","alert","handleRetryGoal","snapshot","handleWithDraw","balance","userData","userBalancedb","reward","userInvestment","goBack","map","endDate","myEndDate","percentage","eventName","slice","category","dificulty","description"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useHistory, useParams } from 'react-router'\nimport { useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\nimport MenuAppBar from '../../../Layout/Navbar'\nimport firebase from '../../../Config/FirebaseConfig'\nimport AlertDialog from '../../../Components/AlertPopup'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\nimport FormDialog from '../../../Components/InputPopup'\nimport TextsmsOutlinedIcon from '@material-ui/icons/TextsmsOutlined'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\nconst StartGoalDetailPage = () => {\n  const db = firebase.database()\n  const { id } = useParams()\n  const history = useHistory()\n  const [goalDetail, setGoalDetail] = useState([])\n  const [showPopup, setShowPopup] = useState(false)\n  let [loader, setLoader] = useState(false)\n  const selector = useSelector((state) => {\n    return state\n  })\n  const { userReducer, goalReducer } = selector\n  useEffect(() => {\n    const filterSelectedGoal = selector.userReducer.selectedGoals.filter(\n      (val) => val.id === id,\n    )\n    setGoalDetail(filterSelectedGoal)\n    setLoader(true)\n\n    return () => {\n      setGoalDetail([])\n    }\n  }, [])\n\n  // countdown timer working\n  const calculateTime = () => {\n    // if (goalDetail) {\n    const filterSelectedGoal = selector.userReducer.selectedGoals.filter(\n      (val) => val.id === id,\n    )\n    if (filterSelectedGoal.length) {\n      const date = new Date(filterSelectedGoal[0].GoalStartDate)\n      var myFutureDate = new Date(date)\n      let currentDate = new Date()\n      myFutureDate.setDate(\n        myFutureDate.getDate() +\n          Number(filterSelectedGoal[0].inputValues.numberOfDays),\n      )\n      const difference = myFutureDate - currentDate\n      // setEndDate(myFutureDate)\n      // console.log(myFutureDate)\n      let timeLeft = {}\n\n      if (difference > 0) {\n        timeLeft = {\n          days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n          hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n          minutes: Math.floor((difference / 1000 / 60) % 60),\n          seconds: Math.floor((difference / 1000) % 60),\n        }\n      }\n\n      return timeLeft\n      // }\n    }\n  }\n  calculateTime()\n  const [timeLeft, setTimeLeft] = useState(calculateTime())\n  useEffect(() => {\n    if (loader) {\n      setLoader(false)\n    }\n    if (timeLeft) {\n      if (Object.keys(timeLeft).length !== 0) {\n        const timer = setTimeout(() => {\n          setTimeLeft(calculateTime())\n        }, 1000)\n        // Clear timeout if the component is unmounted\n        return () => clearTimeout(timer)\n      }\n    }\n  })\n\n  // submit goal working\n  let [open, setOpen] = useState(false)\n  let [goalId, setGoalId] = useState('')\n  let [myGoalId, setMyGoalId] = useState('')\n  const [imgUrl, setImgurl] = useState('')\n  const [imgName, setImgName] = useState('')\n  const [local, setLocal] = useState('')\n  let [loading, setLoading] = useState(false)\n  let [submitGoalKey, setSubmitGoalKey] = useState('')\n\n  const handleOpenForm = (event) => {\n    let filterFormSelectedGoal = selector.userReducer.selectedGoals.filter(\n      (val) => val.id === event,\n    )\n    setMyGoalId(filterFormSelectedGoal[0].myGoalId)\n    setGoalId(event)\n    setOpen(true)\n    db.ref(`organizations/${goalReducer.currentUser.orgId}/submitGoals`).on(\n      'value',\n      (snap) => {\n        snap.forEach((sGoal) => {\n          if (sGoal.val().SubmitGoal.id === event) {\n            const getSelecGoalKey = sGoal.key\n            setSubmitGoalKey(getSelecGoalKey)\n          }\n          // console.log(sGoal.val(),event);\n        })\n      },\n    )\n    console.log('unreport')\n  }\n  const handleCloseSubmitForm = () => {\n    setOpen(false)\n  }\n\n  const handleSelectImg = (event) => {\n    const url = URL.createObjectURL(event.target.files[0])\n    const goalImgName = event.target.files[0].name\n    setImgurl(url)\n    setImgName(goalImgName)\n    setLocal(event.target.files[0])\n  }\n\n  // firebase storage ref\n  const storage = firebase.storage()\n  let createStorageRef = () => storage.ref(`SubmitImages/${imgName}`).put(local)\n  let downLoad = () => storage.ref(`SubmitImages/${imgName}`).getDownloadURL()\n\n  const handleSubmitGoal = () => {\n    let filterFormSelectedGoal = selector.userReducer.selectedGoals.filter(\n      (val) => val.id === goalId,\n    )\n    setLoading(true)\n    let myGoalObject = {\n      submit: true,\n      approved: false,\n      decline: false,\n      submitDate: new Date().toLocaleString(),\n      hasStarted: false,\n      isReport: false,\n      acceptReport: false,\n      pending: false,\n    }\n    // console.log(filterFormSelectedGoal[0]);\n    if (!filterFormSelectedGoal[0].submit) {\n      if (local) {\n        createStorageRef()\n          .then(() => {\n            // download img from storage\n            downLoad()\n              .then((url) => {\n                // then set submit goals in database\n                if (goalReducer.currentUser.orgId !== '') {\n                  // user side update mygoals\n                  db.ref(\n                    `organizations/${goalReducer.currentUser.orgId}/users/${userReducer.currentUserOrgId}/myGoals/${myGoalId}`,\n                  ).update(myGoalObject)\n                  // set insise organization\n                  if (!filterFormSelectedGoal[0].acceptReport) {\n                    db.ref(\n                      `organizations/${goalReducer.currentUser.orgId}/submitGoals`,\n                    )\n                      .push()\n                      .set({\n                        SubmitGoal: filterFormSelectedGoal[0],\n                        userName: goalReducer.currentUser.name,\n                        userIdMain: goalReducer.currentUser.id,\n                        uploadImgUlr: url,\n                        approved: false,\n                        decline: false,\n                        submit: true,\n                        hasStarted: false,\n                        submitDate: new Date().toLocaleString(),\n                        orgUserId: userReducer.currentUserOrgId,\n                        isReport: false,\n                        acceptReport: false,\n                        pending: false,\n                      })\n\n                      .then(() => {\n                        setImgurl('')\n                        setImgName('')\n                        setLocal('')\n                        setShowPopup(true)\n                        setLoading(false)\n\n                        console.log('submitted')\n                        handleClose()\n                      })\n                      .catch((err) => {\n                        console.log(err)\n                        setLoading(false)\n                        alert('connectionn failed try again')\n                      })\n                  } else {\n                    db.ref(\n                      `organizations/${goalReducer.currentUser.orgId}/submitGoals/${submitGoalKey}`,\n                    )\n                      .update({\n                        uploadImgUlr: url,\n                        approved: false,\n                        decline: false,\n                        submit: true,\n                        hasStarted: false,\n                        submitDate: new Date().toLocaleString(),\n                        isReport: false,\n                        acceptReport: false,\n                        pending: false,\n                      })\n                      .then(() => {\n                        setImgurl('')\n                        setImgName('')\n                        setLocal('')\n                        setShowPopup(true)\n                        setLoading(false)\n\n                        console.log('submitted')\n                        handleClose()\n                      })\n                      .catch((err) => {\n                        console.log(err)\n                        setLoading(false)\n                        alert('connectionn failed try again')\n                      })\n                  }\n                }\n                //    set submit goal if user not enrolled in any org\n                else {\n                  db.ref(\n                    `withoutOrganization/users/${userReducer.currentUserOrgId}/myGoals/${myGoalId}`,\n                  ).update(myGoalObject)\n\n                  if (!filterFormSelectedGoal[0].acceptReport) {\n                    console.log('submitted')\n                    db.ref(`withoutOrganization/submitGoals`)\n                      .push()\n                      .set({\n                        SubmitGoal: filterFormSelectedGoal[0],\n                        userName: goalReducer.currentUser.name,\n                        userIdMain: goalReducer.currentUser.id,\n                        uploadImgUlr: url,\n                        approved: false,\n                        decline: false,\n                        orgUserId: userReducer.currentUserOrgId,\n                        hasStarted: false,\n                        submit: true,\n                        submitDate: new Date().toLocaleString(),\n                        isReport: false,\n                        acceptReport: false,\n                        pending: false,\n                      })\n                      .then(() => {\n                        setImgurl('')\n                        setImgName('')\n                        setLocal('')\n                        setShowPopup(true)\n                        setLoading(false)\n                        handleClose()\n                      })\n                      .catch((err) => {\n                        console.log(err)\n                        alert('connection failed try again')\n                        setLoading(false)\n                      })\n                  } else {\n                    db.ref(\n                      `withoutOrganization/submitGoals/${submitGoalKey}`,\n                    ).update({\n                      uploadImgUlr: url,\n                      approved: false,\n                      decline: false,\n                      submit: true,\n                      hasStarted: false,\n                      submitDate: new Date().toLocaleString(),\n                      isReport: false,\n                      acceptReport: false,\n                      pending: false,\n                    })\n                    .then(() => {\n                      setImgurl('')\n                      setImgName('')\n                      setLocal('')\n                      setShowPopup(true)\n                      setLoading(false)\n                      handleClose()\n                    })\n                    .catch((err) => {\n                      console.log(err)\n                      alert('connection failed try again')\n                      setLoading(false)\n                    })\n                  }\n                }\n              })\n              // handle error of download img\n              .catch((err) => {\n                console.log(err)\n              })\n          })\n          // handle error of upload img\n          .catch((err) => {\n            console.log(err)\n          })\n      } else {\n        alert('Please select image')\n      }\n    } else {\n      alert('already submitted')\n      setLoading(false)\n    }\n  }\n\n  // retry goal\n  const handleRetryGoal = (event) => {\n    // console.log(event,selector.userReducer)\n    // get submit goal key for retry\n    if (selector.goalReducer.currentUser.orgId !== '') {\n      db.ref(\n        `organizations/${selector.goalReducer.currentUser.orgId}/users/${selector.userReducer.currentUserOrgId}/myGoals/${event.myGoalId}`,\n      ).update({\n        decline: false,\n        submit: false,\n        pending: false,\n      })\n      db.ref(\n        `organizations/${selector.goalReducer.currentUser.orgId}/submitGoals`,\n      ).on('value', (snapshot) => {\n        snapshot.forEach((val) => {\n          if (val.val().SubmitGoal.myGoalId === event.myGoalId) {\n            // console.log(val.key)\n            db.ref(\n              `organizations/${selector.goalReducer.currentUser.orgId}/submitGoals/${val.key}`,\n            )\n              .update({\n                decline: false,\n                submit: false,\n                pending: false,\n              })\n              .then(() => {\n                console.log('retry')\n                history.push('/goals-status')\n              })\n              .catch((err) => {\n                console.log(err)\n                alert('connection failed please try again')\n              })\n          }\n        })\n      })\n    }\n    //    set goal if user not enrolled in any org\n    else {\n      db.ref(\n        `withoutOrganization/users/${selector.userReducer.currentUserOrgId}/myGoals/${event.myGoalId}`,\n      ).update({\n        decline: false,\n        submit: false,\n        pending: false,\n      })\n      db.ref(`withoutOrganization/submitGoals`).on('value', (snapshot) => {\n        snapshot.forEach((val) => {\n          if (val.val().SubmitGoal.myGoalId === event.myGoalId) {\n            // console.log(val.key)\n            db.ref(`withoutOrganization/submitGoals/${val.key}`)\n              .update({\n                decline: false,\n                submit: false,\n                pending: false,\n              })\n              .then(() => {\n                console.log('retry')\n                history.push('/goals-status')\n              })\n              .catch((err) => {\n                console.log(err)\n                alert('connection failed please try again')\n              })\n          }\n        })\n      })\n    }\n  }\n\n  // withdra pending goals\n\n  const handleWithDraw = (event) => {\n    // if (!filterFormSelectedGoal.length) {\n    let balance = ''\n    db.ref(\n      `organizations/${selector.goalReducer.currentUser.orgId}/users/${selector.userReducer.currentUserOrgId}`,\n    ).on('value', (snapshot) => {\n      let userData = snapshot.val()\n      let userBalancedb = userData.balance\n      balance = userBalancedb\n    })\n\n    if (selector.goalReducer.currentUser.orgId !== '') {\n      db.ref(\n        `organizations/${selector.goalReducer.currentUser.orgId}/users/${selector.userReducer.currentUserOrgId}`,\n      ).update({\n        balance: balance + Number(event.reward) +event.userInvestment,\n      })\n\n      db.ref(\n        `organizations/${selector.goalReducer.currentUser.orgId}/users/${selector.userReducer.currentUserOrgId}/myGoals/${event.myGoalId}`,\n      ).update({\n        pending: false,\n      })\n      db.ref(\n        `organizations/${selector.goalReducer.currentUser.orgId}/submitGoals`,\n      ).on('value', (snapshot) => {\n        snapshot.forEach((val) => {\n          if (val.val().SubmitGoal.myGoalId === event.myGoalId) {\n            // console.log(val.key)\n            db.ref(\n              `organizations/${selector.goalReducer.currentUser.orgId}/submitGoals/${val.key}`,\n            )\n              .update({\n                pending: false,\n              })\n              .then(() => {\n                console.log('retry')\n                history.push('/goals-status')\n              })\n              .catch((err) => {\n                console.log(err)\n                alert('connection failed please try again')\n              })\n          }\n        })\n      })\n    }\n    //    set goal if user not enrolled in any org\n    else {\n      db.ref(\n        `organizations/${selector.goalReducer.currentUser.orgId}/users/${selector.userReducer.currentUserOrgId}`,\n      ).update({\n        balance: Number(balance) + Number(event.reward)+event.userInvestment,\n      })\n      db.ref(\n        `withoutOrganization/users/${selector.userReducer.currentUserOrgId}/myGoals/${event.myGoalId}`,\n      ).update({\n        pending: true,\n      })\n      db.ref(`withoutOrganization/submitGoals`).on('value', (snapshot) => {\n        snapshot.forEach((val) => {\n          if (val.val().SubmitGoal.myGoalId === event.myGoalId) {\n            // console.log(val.key)\n            db.ref(`withoutOrganization/submitGoals/${val.key}`)\n              .update({\n                pending: false,\n              })\n              .then(() => {\n                console.log('retry')\n                history.push('/goals-status')\n              })\n              .catch((err) => {\n                console.log(err)\n                alert('connection failed please try again')\n              })\n          }\n        })\n      })\n    }\n  }\n\n  // // retake pic working\n  // let [retakeForm, setRetakeForm] = useState(false)\n  // // let [submitGoalKey, setSubmitGoalKey] = useState('')\n\n  // const handleOpenRetakeForm = (event) => {\n  //   let filterFormSelectedGoal = selector.userReducer.selectedGoals.filter(\n  //     (val) => val.id === event,\n  //   )\n  //   setMyGoalId(filterFormSelectedGoal[0].myGoalId)\n  //   setGoalId(event)\n  //   setRetakeForm(true)\n  //   // get submit goal key to update submit goal\n  //   db.ref(`organizations/${goalReducer.currentUser.orgId}/submitGoals`).on(\n  //     'value',\n  //     (snap) => {\n  //       snap.forEach((sGoal) => {\n  //         if (sGoal.val().SubmitGoal.id === event) {\n  //           const getSelecGoalKey = sGoal.key\n  //           setSubmitGoalKey(getSelecGoalKey)\n  //         }\n  //         // console.log(sGoal.val(),event);\n  //       })\n  //     },\n  //   )\n  // }\n  // const handleReSubmitGoal = () => {\n  //   // console.log('resubmit',submitGoalKey)\n  //   let filterFormSelectedGoal = selector.userReducer.selectedGoals.filter(\n  //     (val) => val.id === goalId,\n  //   )\n  //   setLoading(true)\n  //   let myGoalObject = {\n  //     submit: true,\n  //     approved: false,\n  //     decline: false,\n  //     submitDate: new Date().toLocaleString(),\n  //     hasStarted: false,\n  //     isReport: false,\n  //     acceptReport: false,\n  //     pending: false,\n  //   }\n  //   // if (filterFormSelectedGoal[0].acceptReport) {\n  //   //   // console.log('true',filterFormSelectedGoal,submitGoalKey)\n  //   //   if (local) {\n  //   //     createStorageRef()\n  //   //       .then(() => {\n  //   //         // download img from storage\n  //   //         downLoad()\n  //   //           .then((url) => {\n  //   //             // then set submit goals in database\n  //   //             if (goalReducer.currentUser.orgId !== \"\") {\n  //   //               // user side update mygoals\n  //   //               db.ref(\n  //   //                 `organizations/${goalReducer.currentUser.orgId}/users/${userReducer.currentUserOrgId}/myGoals/${myGoalId}`\n  //   //               ).update(myGoalObject);\n  //   //               db.ref(\n  //   //                 `organizations/${goalReducer.currentUser.orgId}/submitGoals/${submitGoalKey}`\n  //   //               )\n  //   //                 .update({\n  //   //                   uploadImgUlr: url,\n  //   //                   approved: false,\n  //   //                   decline: false,\n  //   //                   submit: true,\n  //   //                   hasStarted: false,\n  //   //                   submitDate: new Date().toLocaleString(),\n  //   //                   isReport: false,\n  //   //                   acceptReport: false,\n  //   //                   pending: false,\n  //   //                 })\n  //   //                 .then(() => {\n  //   //                   setImgurl(\"\");\n  //   //                   setImgName(\"\");\n  //   //                   setLocal(\"\");\n  //   //                   setShowPopup(true);\n  //   //                   setLoading(false);\n  //   //                   console.log(\"submitted\");\n  //   //                   handleClose();\n  //   //                 })\n  //   //                 .catch((err) => {\n  //   //                   console.log(err);\n  //   //                   setLoading(false);\n\n  //   //                   alert(\"connectionn failed try again\");\n  //   //                 });\n  //   //             }\n  //   //             // set insise organization\n  //   //             //    set submit goal if user not enrolled in any org\n  //   //             else {\n  //   //               db.ref(\n  //   //                 `withoutOrganization/users/${userReducer.currentUserOrgId}/myGoals/${myGoalId}`\n  //   //               )\n  //   //                 .update(myGoalObject)\n  //   //                 .then(() => {\n  //   //                   setImgurl(\"\");\n  //   //                   setImgName(\"\");\n  //   //                   setLocal(\"\");\n  //   //                   setShowPopup(true);\n  //   //                   setLoading(false);\n  //   //                   console.log(\"submitted\");\n  //   //                   db.ref(`withoutOrganization/submitGoals/${submitGoalKey}`)\n  //   //                     .push()\n  //   //                     .update({\n  //   //                       uploadImgUlr: url,\n  //   //                       approved: false,\n  //   //                       decline: false,\n  //   //                       hasStarted: false,\n  //   //                       submit: true,\n  //   //                       submitDate: new Date().toLocaleString(),\n  //   //                       isReport: false,\n  //   //                       acceptReport: false,\n  //   //                       pending: false,\n  //   //                     });\n  //   //                   handleClose();\n  //   //                 })\n  //   //                 .catch((err) => {\n  //   //                   console.log(err);\n  //   //                   alert(\"connection failed try again\");\n  //   //                   setLoading(false);\n  //   //                 });\n  //   //             }\n  //   //           })\n  //   //           // handle error of download img\n  //   //           .catch((err) => {\n  //   //             console.log(err);\n  //   //           });\n  //   //       })\n  //   //       // handle error of upload img\n  //   //       .catch((err) => {\n  //   //         console.log(err);\n  //   //       });\n  //   //   } else {\n  //   //     alert(\"Please select image\");\n  //   //   }\n  //   // }\n  // }\n\n  //   alert popup close function\n  \n  \n  const handleClose = () => {\n    setShowPopup(false)\n    history.push('/selec-goals')\n  }\n\n  return (\n    <div className=\"userGoalDetail_container\">\n      {showPopup ? (\n        <AlertDialog\n          handleClose={handleClose}\n          open={showPopup}\n          value=\"Good luck on your goal\"\n          btnValue=\"Back to My Goals\"\n        />\n      ) : null}\n      {open ? (\n        <FormDialog\n          fileInput\n          open={open}\n          handleClose={handleCloseSubmitForm}\n          btnValue=\"Submit Goal\"\n          handleAddFunction={handleSubmitGoal}\n          handleInputvalue={handleSelectImg}\n          imgUrl={imgUrl}\n          loading={loading}\n        />\n      ) : null}\n      <MenuAppBar />\n      <div className=\"userGoalDetail_md\">\n        <div className=\"mobViewHead mobViewFlat\">\n          <div className=\"mobViewHeadContent\">\n            <div className=\"mobHeadBack\">\n              <button\n                onClick={() => history.goBack()}\n                className=\"mobHeadBack_link\"\n              >\n                <ArrowBackIosIcon />\n              </button>\n            </div>\n            <h2>TRYVE</h2>\n            <div className=\"headChatIcon\">\n              <TextsmsOutlinedIcon />\n            </div>\n          </div>\n        </div>\n          <div className=\"userGoal_detail_d\">\n            {goalDetail.length ? (\n              goalDetail.map((val) => {\n                const endDate = new Date(val.GoalStartDate)\n                var myEndDate = new Date(endDate)\n                myEndDate\n                  .setDate(\n                    myEndDate.getDate() + Number(val.inputValues.numberOfDays),\n                  )\n                  .toLocaleString()\n                return (\n                  <div className=\"userGoalDetail_content2\" key={val.id}>\n                    <div className=\"detailVerifyLeftContent\">\n                      <button\n                        onClick={() => history.goBack()}\n                        className=\"Verifyback_link\"\n                      >\n                        <ArrowBackIcon />\n                      </button>\n                      <img src={val.url} alt=\"...\" />\n                      {val.decline || val.pending ? null : (\n                        <button\n                          className=\"start_goal_btn\"\n                          onClick={\n                            // !val.acceptReport\n                            // ?\n                            () => handleOpenForm(val.id)\n                            // : () => handleOpenRetakeForm(val.id)\n                          }\n                          disabled={val.submit}\n                        >\n                          {val.submit && !val.approved && !val.decline\n                            ? ' Submitted'\n                            : (val.submit &&\n                                val.approved &&\n                                val.percentage === '100' &&\n                                !val.pending) ||\n                              (val.submit &&\n                                val.approved &&\n                                val.percentage !== '100' &&\n                                !val.pending)\n                            ? ' Approved'\n                            : val.submit &&\n                              val.approved &&\n                              val.percentage !== '100' &&\n                              val.pending\n                            ? ' Pending '\n                            : val.decline === true &&\n                              val.submit &&\n                              !val.approved\n                            ? ' decline '\n                            : ' Take verification photo '}\n                        </button>\n                      )}\n                      {val.decline ? (\n                        <button\n                          className=\"start_goal_btn\"\n                          onClick={() => handleRetryGoal(val)}\n                        >\n                          Retry\n                        </button>\n                      ) : null}\n                      {val.pending ? (\n                        <div className=\"withdrawBtns\">\n                          <button\n                            className=\"start_goal_btn\"\n                            onClick={() => handleWithDraw(val)}\n                          >\n                            Withdraw\n                          </button>\n                          <button\n                            className=\"start_goal_btn\"\n                            onClick={() => handleRetryGoal(val)}\n                          >\n                            Retry\n                          </button>\n                        </div>\n                      ) : null}\n                    </div>\n                    <div className=\"detailRight_contentVerify\">\n                      <div className=\"detail_list\">\n                        <ul className=\"detailGoal_ul\">\n                          <li className=\"borderBtm\">\n                            <h5 className=\"db_bold_head\">Goal : </h5>\n                            <p className=\"detail_db\">\n                              {val.inputValues.eventName}\n                            </p>\n                          </li>\n                          <div className=\"moreInfoGoal\">\n                            <li className=\"goals\">\n                              {val.approved && !val.pending && val.submit ? (\n                                <>\n                                  <p>Success : {val.percentage}%</p>\n                                  <p>Reward : {val.reward}</p>\n                                </>\n                              ) : (\n                                <>\n                                  <p>\n                                    Start : {val.GoalStartDate.slice(0, 10)}{' '}\n                                  </p>\n                                  <p>\n                                    End :{' '}\n                                    {myEndDate.toLocaleString().slice(0, 10)}\n                                  </p>\n                                </>\n                              )}\n                            </li>\n                            <li>\n                              <p>Category : </p>\n                              <p className=\"detail_db\">\n                                {val.inputValues.category}\n                              </p>\n                            </li>\n                            <li>\n                              <p>Difficulty : </p>\n                              <p className=\"detail_db\">\n                                {val.inputValues.dificulty}\n                              </p>\n                            </li>\n                          </div>\n                          <li className=\"db_bold_head2\">\n                            <h5 className=\"db_bold_head\">Description : </h5>\n                            <p className=\"detail_db\">\n                              {val.inputValues.description}\n                            </p>\n                          </li>\n                        </ul>\n                        {!val.submit ? (\n                          <div className=\"timeLeftCounter borderBtm\">\n                            <h5>Time Left:</h5>\n                            <p>\n                              {Object.keys(timeLeft).length !== 0\n                                ? `${timeLeft.days} days ${timeLeft.hours} hours `\n                                : 'time end'}\n                            </p>\n                          </div>\n                        ) : (\n                          <p>\n                            {val.submit && !val.approved && !val.decline\n                              ? ' Submitted'\n                              : (val.submit &&\n                                  val.approved &&\n                                  val.percentage === '100' &&\n                                  !val.pending) ||\n                                (val.submit &&\n                                  val.approved &&\n                                  val.percentage !== '100' &&\n                                  !val.pending)\n                              ? ' Approved'\n                              : val.submit &&\n                                val.approved &&\n                                val.percentage !== '100' &&\n                                val.pending\n                              ? ' Pending '\n                              : val.decline === true &&\n                                val.submit &&\n                                !val.approved\n                              ? ' decline '\n                              : ' NeedSubmmision '}\n                          </p>\n                        )}\n                      </div>\n                      <div className=\"goalMob_btn\">\n                        <button\n                          className=\"start_goal_btn\"\n                          onClick={() => handleOpenForm(val.id)}\n                          disabled={val.submit}\n                        >\n                          {val.submit && !val.approved && !val.decline\n                            ? ' Submitted'\n                            : (val.submit &&\n                                val.approved &&\n                                val.percentage === '100' &&\n                                !val.pending) ||\n                              (val.submit &&\n                                val.approved &&\n                                val.percentage !== '100' &&\n                                !val.pending)\n                            ? ' Approved'\n                            : val.submit &&\n                              val.approved &&\n                              val.percentage !== '100' &&\n                              val.pending\n                            ? ' Pending '\n                            : val.decline === true &&\n                              val.submit &&\n                              !val.approved\n                            ? ' decline '\n                            : ' Take verification photo '}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )\n              })\n            ) : (\n              <div onClick={() => history.goBack()} className=\"goBack\">\n                {' '}\n                Go back and select product...{' '}\n              </div>\n            )}\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StartGoalDetailPage\n"]},"metadata":{},"sourceType":"module"}